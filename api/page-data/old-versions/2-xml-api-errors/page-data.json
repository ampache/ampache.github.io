{"componentChunkName":"component---src-templates-docs-js","path":"/old-versions/2-xml-api-errors","result":{"data":{"site":{"siteMetadata":{"title":"Ampache API | Ampache.org","docsLocation":"https://github.com/ampache/ampache/wiki"}},"mdx":{"fields":{"id":"27e5e9d7-a543-59d9-8ce5-5153f4f70283","title":"2 Xml Api Errors","slug":"/old-versions/2-xml-api-errors"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"XML Api Errors\"), mdx(\"p\", null, \"Ampache's XML errors are loosely based around the HTTP status codes. All errors are returned in the form of an XML Document however the string error message provided is translated into the language of the Ampache server in question. All services should only use the code value.\"), mdx(\"h2\", null, \"Example Error\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-xml\"\n  }), \"<root>\\n      <error code=\\\"501\\\">Access Control Not Enabled</error>\\n</root>\\n\")), mdx(\"h2\", null, \"Current Error Codes\"), mdx(\"p\", null, \"All error codes are accompanied by a string value for the error and derived from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\"\n  }), \"HTTP/1.1 Status Codes\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"501\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a fatal error, the Ampache server you have requested does not currently have access control enabled. The API is disabled.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"400\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Used when you have specified a valid method but something about the input is incorrect / invalid. See Error message for details, but do not re-attempt the exact same request.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"401\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a temporary error, this means no valid session was passed or the handshake failed. This should be an indication for services to attempt another handshake\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"403\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a fatal error, the ACL on the Ampache server prevents access from the current source IP Address.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"405\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a fatal error, the service requested a method that the API does not implement.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#xml-api-errors","title":"XML Api Errors","items":[{"url":"#example-error","title":"Example Error"},{"url":"#current-error-codes","title":"Current Error Codes"}]}]},"parent":{"__typename":"File","relativePath":"old-versions/2-xml-api-errors.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/api-advanced-search","title":"advanced_search"}}},{"node":{"fields":{"slug":"/api-xml-methods","title":"XML Methods"}}},{"node":{"fields":{"slug":"/","title":"Ampache API"}}},{"node":{"fields":{"slug":"/api-json-methods","title":"JSON Methods"}}},{"node":{"fields":{"slug":"/api-errors","title":"API Errors"}}},{"node":{"fields":{"slug":"/api-standards","title":"Api Standards"}}},{"node":{"fields":{"slug":"/old-versions/2-xml-api-errors","title":"2 Xml Api Errors"}}},{"node":{"fields":{"slug":"/old-versions/3-advanced-search","title":"3 Advanced Search"}}},{"node":{"fields":{"slug":"/old-versions/1-ampache-api","title":"XML API <= 4.1.0"}}},{"node":{"fields":{"slug":"/old-versions","title":"Old Releases"}}}]}},"pageContext":{"id":"27e5e9d7-a543-59d9-8ce5-5153f4f70283"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}