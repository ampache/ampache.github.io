{"componentChunkName":"component---src-templates-docs-js","path":"/api-changelog","result":{"data":{"site":{"siteMetadata":{"title":"Ampache API | Ampache.org","docsLocation":"https://github.com/ampache/ampache/wiki"}},"mdx":{"fields":{"id":"b29cf665-bd8a-5b1e-821f-202b11a3e986","title":"Changelog","slug":"/api-changelog"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Changelog\",\n  \"metaTitle\": \"Changelog\",\n  \"metaDescription\": \"API Changelog\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"API 5.2.0\"), mdx(\"p\", null, \"Check out the docs for multi API support at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ampache.org/api/\"\n  }, \"ampache.org\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"note\"), \" JSON didn't exist for API3 so all json requests from API3 calls will revert to API5\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Support for API3, API4 and API5 responses including PHP8 support (keeps original tag calls)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlists: sql for searches wasn't filtering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlists: add parameter 'show_all' if true ignore 'api_hide_dupe_searches' setting\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlists: add parameter 'show_all' if true ignore 'api_hide_dupe_searches' setting\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API3\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added genre calls as an alias to tag functions to match API4 and API5\")))), mdx(\"h3\", null, \"API 5.1.1\"), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Access to podcast_episode_delete\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stats calls with an offest and limit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"advanced_search calls with an offset and limit\")), mdx(\"h3\", null, \"API 5.1.0\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NEW API functions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::live_stream (get a radio stream by id)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::live_streams\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::stream Added type 'podcast_episode' ('podcast' to be removed in Ampache 6)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add 'time' and 'size' to all podcast_episode responses\")), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"live_stream objects added 'catalog' and 'site_url'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stats: additional type values: 'video', 'playlist', 'podcast', 'podcast_episode'\")), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_indexes: JSON didn't think live_streams was valid (it is)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"record_play: user is optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bad xml tags in deleted functions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"scrobble: Add song\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"mbid, artist_mbid, album_mbid (docs have no '\"), \"' so support both)\")), mdx(\"h3\", null, \"API 5.0.0\"), mdx(\"p\", null, \"All API code that used 'Tag' now references 'Genre' instead\"), mdx(\"p\", null, \"This version of the API is the first semantic version. \\\"5.0.0\\\"\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add global playcount to podcast_episode and video responses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"searches (the number of saved smartlists) added to the handshake/ping response\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NEW API functions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::song_delete (Delete files when you are allowed to)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::user_preferences (Get your user preferences)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::user_preference (Get your preference by name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::system_update (Check Ampache for updates and run the update if there is one.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::system_preferences (Preferences for the system user)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::system_preference (Get a system preference by name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::preference_create (Add a new preference to Ampache)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::preference_edit (Edit a preference value by name; optionally apply to all users)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::preference_delete (Delete a preference by name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::labels (list your record labels)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::label (get a label by id)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::label_artists (get all artists attached to that label)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::get_bookmark (See if you've previously played the file)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::bookmarks (List all bookmarks created by your account)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::bookmark_create (Create a bookmark to allow revisting later)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::bookmark_edit (Edit a bookmark)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::bookmark_delete (Delete a bookmark by object id, type, user and client name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::localplay_songs (Get the list of songs in your localplay instance)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API::deleted_songs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API::deleted_podcast_episodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API::deleted_videos\")))), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The API version matches release version '5.0.0'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A backcompatible version (500000) is sent when using old api versions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"handshake and ping counts now return the actual object counts for playlists\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'playlists' => $counts\", \"['playlist']\", \",\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'searches' => $counts\", \"['search']\", \",\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'playlists_searches' => $counts\", \"['playlist']\", \" + $counts\", \"['search']\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Renamed functions:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tags => genres\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tag => genre\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tag_artists => genre_artists\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tag_albums => genre_albums\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tag_songs => genre_songs\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't allow duplicate podcast feeds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make filter optional in shares, genre_artists, genre_albums, genre_songs (Used as a general catch all method like genres)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error Codes and response structure has changed\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4700 Access Control not Enabled\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4701 Received Invalid Handshake\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4703 Access Denied\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4704 Not Found\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4705 Missing Method\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4706 Depreciated Method\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4710 Bad Request\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4742 Failed Access Check\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stats: Removed back compat from older versions. Only 'type' is mandatory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return empty objects when the request was correct but the results were empty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't transcode podcast_episodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"localplay\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"added 'track' parameter used by 'skip' commands to go to the playlist track (playlist starts at 1)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"system_update: update the database if required as well\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlist_edit: added 'owner' as an optional parameter (Change playlist owner to the user id)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalog_file: Allow comma-separate task values. (good for API inotify scripts)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_episode object \\\"pubdate\\\" has been changed to ISO 8601 date (2004-02-12T15:19:21+00:00)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast object \\\"build_date\\\" and \\\"sync_date\\\" have also been changed to ISO 8601 date\")), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalog_file: Couldn't add files\")), mdx(\"h3\", null, \"API 4.4.2\"), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API::indexes Artist albums were being added incorrectly for XML\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send back the full album name in responses\")), mdx(\"h3\", null, \"API 4.4.1\"), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API::stats would not offset recent calls\")), mdx(\"h2\", null, \"API 4.4.0\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NEW API functions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::users (ID and Username of the site users)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::localplay added new options to 'command' ('pause', 'add', 'volume_up', 'volume_down', 'volume_mute', 'delete_all', 'skip')\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::localplay added parameters:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'oid' (integer) object_id to add //optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'type' (string) Default: 'Song' ('Song', 'Video', 'Podcast_Episode', 'Channel', 'Broadcast', 'Democratic', 'Live_Stream') //optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'clear' (integer) 0|1 clear the current playlist on add //optional\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::playlist_edit added new parameter 'sort': (0,1) sort the playlist by 'Artist, Album, Song' //optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::get_indexes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New type options: 'album_artist', 'podcast', 'podcast_episode', 'share', 'video'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added parameter 'include': (0,1) (add the extra songs details if a playlist or podcast_episodes if a podcast)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::rate - Added types 'playlist', 'podcast', 'podcast_episode', 'video', 'tvshow', 'tvshow_season'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::flag - Added types 'podcast', 'podcast_episode', 'video', 'tvshow', 'tvshow_season'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add time to artist and album objects. (total time of all songs in seconds)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add songcount, albumcount to artist objects. (time in seconds)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add songcount to album objects. (time in seconds)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add type (release_type) to album objects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add disk to song objects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add time to video objects. (time in seconds)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add title, mime, catalog to podcast_episodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::advanced_search Add 'playlist', 'user' and 'video' to search types\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::handshake added extra total counts to the response\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"users, tags, podcasts, podcast_episodes, shares, licenses, live_streams, labels\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::ping match the handshake response (excluding the auth token)\")), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_indexes: 'playlist' now requires include=1 for xml calls if you want the tracks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make filter optional in shares\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::podcast_episodes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"url\\\" is now a play url (instead of a link to the episode)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"public_url\\\" is now the old episode link\")))), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::podcast_edit wasn't able to edit a podcast...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::democratic was using action from localplay in the return responses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_indexes for XML didn't include podcast indexes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set OUTDATED_DATABASE_OK on image.php, play/index.php and share.php to stop blocking requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't limit sub items when using a limit (e.g return all podcast episodes when selecting a podcast)\")), mdx(\"h3\", null, \"Deprecated\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dropped in API 5.0.0\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::get_indexes; stop including playlist track and id in xml by default\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Album objects: \\\"tracks\\\" will only include track details. Use \\\"songcount\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Artist objects: \\\"albums\\\", \\\"songs\\\" will only include track details Use \\\"albumcount\\\" and \\\"songcount\\\"\")))), mdx(\"h2\", null, \"API 4.3.0\"), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::record_play\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make 'user' parameter optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow 'user' to the be user_id \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"or\"), \" the username string\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add 'date' parameter (optional)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Require 100 (Admin) permission to record plays for other users\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::get_indexes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add 'hide_search' parameter (optional)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::playlists\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add 'hide_search' parameter (optional)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Setting a limit of 'none' would slice away all the results\")), mdx(\"h2\", null, \"API 4.2.6\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NO CHANGE\")), mdx(\"h2\", null, \"API 4.2.5\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NO CHANGE\")), mdx(\"h2\", null, \"API 4.2.4\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NO CHANGE\")), mdx(\"h2\", null, \"API 4.2.3\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NO CHANGE\")), mdx(\"h2\", null, \"API 4.2.2\"), mdx(\"p\", null, \"Minor bugfixes\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::advanced_search added parameter 'random' (0|1) to shuffle your searches\")), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remove spaces from advanced_search rule names. (Backwards compatible with old names)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'has image' => 'has_image'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'image height' => 'image_height'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'image width' => 'image_width'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'filename' => 'file' (Video search)\")))), mdx(\"h3\", null, \"Deprecated\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search rules 'has image','image height', 'image width', 'filename'. (Removed in Ampache 5.0.0)\")), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::stream, Api::download Api::playlist_generate 'format' parameter was overwritten with 'xml' or 'json'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Produce valid XML for playlist_generate using the 'id' format in XML\")), mdx(\"h2\", null, \"API 4.2.1\"), mdx(\"p\", null, \"No functional changes from 4.2.0\"), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Filter in \\\"playlist\\\" and \\\"playlist_songs\\\" fixed\")), mdx(\"h2\", null, \"API 4.2.0\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"API versions will follow release version and no longer use builds in the integer versions (e.g. 420000)\"), \"\\nAPI 5.0.0-release will be the first Ampache release to match the release string.\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON API now available!\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call xml as normal:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[<http://music.com.au/server/xml.server.php?action=handshake&auth=APIKEY&version=420000>]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call the JSON server:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[<http://music.com.au/server/json.server.php?action=handshake&auth=APIKEY&version=420000>]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example XML and JSON responses available \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ampache/python3-ampache/tree/master/docs\"\n  }, \"here\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NEW API functions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_similar: send artist or song id to get related objects from last.fm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shares: get a list of shares you can access\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"share: get a share by id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"share_create: create a share\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"share_edit: edit an existing share\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"share_delete: delete an existing share\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcasts: get a list of podcasts you can access\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast: get a podcast by id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_episodes: get a list of podcast_episodes you can access\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_episode: get a podcast_episode by id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_episode_delete: delete an existing podcast_episode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_create: create a podcast\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_edit: edit an existing podcast\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"podcast_delete: delete an existing podcast\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update_podcast: sync and download new episodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"licenses: get a list of licenses you can access\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"license: get a license by id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalogs: get all the catalogs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalog: get a catalog by id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalog_file: clean, add, verify using the file path (good for scripting)\")))), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bump API version to 420000 (4.2.0)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All calls that return songs now include \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<playlisttrack>\"), \" which can be used to identify track order.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<playcount>\"), \" added to objects with a playcount.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<license>\"), \" added to song objects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't gather art when adding songs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added actions to catalog_action. 'verify_catalog' 'gather_art'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API function \\\"playlist_edit\\\": added ability to edit playlist items\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"items  = (string) comma-separated song_id's (replace existing items with a new object_id) //optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tracks = (string) comma-separated playlisttrack numbers matched to items in order //optional\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Random albums will get songs for all disks if album_group enabled\")), mdx(\"h3\", null, \"Deprecated\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API Build number is depreciated (the last 3 digits of the api version)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API 5.0.0 will be released with a string version (\\\"5.0.0-release\\\")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All future 4.x.x API versions will follow the main Ampache version. (420000, 421000, 422000)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"total_count in the XML API is depreciated and will be removed in API 5.0.0.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML can count objects the same was as a JSON array \", \"[https://www.php.net/manual/en/simplexmlelement.count.php]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Genre in songs is depreciated and will be removed in API 5.0.0.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use tag instead of genre, tag provides a genre ID as well as the name.\")))), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extra text in catalog API calls\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't fail the API calls when the database needs updating\")), mdx(\"h2\", null, \"API 4.0.0 build 004\"), mdx(\"p\", null, \"Bump API version to 400004 (4.0.0 build 004)\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add Api::check_access to warn when you can't access a function\")), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix parameters using 0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Get the correct total_count in xml when you set a limit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix many XML formatting issues\")), mdx(\"h2\", null, \"API 4.0.0 build 003\"), mdx(\"p\", null, \"Bump API version to 400003 (4.0.0 build 003)\"), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"user_numeric searches also available in the API. (\", \"[<https://ampache.org/api/api-xml-methods>]\", \")\")), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::playlist - filter mandatory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::playlist_edit - filter mandatory. name and type now optional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api::user - Extend return values to include more user fields\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Playlist::create - Return duplicate playlist ID instead of creating a new one\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not limit smartlists based on item count (return everything you can access)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Api/Database - Add last_count for search table to speed up access in API\")), mdx(\"h3\", null, \"Removed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Artist::check - Remove MBID from Various Artist objects\")), mdx(\"h3\", null, \"Fixed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix Song::update_song for label\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix Api issues relating to playlist access\")), mdx(\"h2\", null, \"API 4.0.0 build 001\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bump API version to 400002 (4.0.0 build 001)\")), mdx(\"h3\", null, \"Added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documented the Ampache API \", \"[<https://ampache.org/api/api-xml-methods>]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Include smartlists in the API playlist calls.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authentication: allow sha256 encrypted apikey for auth\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You must send an encrypted api key in the following fashion. (Hash key joined with username)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$passphrase = hash('sha256', $username . hash('sha256', $apikey));\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added artist_tag to song searches\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flag: allows flagging object by id & type\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"record_play: allows recording play of object without streaming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catalog_action: allow running add_to_catalog|clean_catalog\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlist_edit: allow editing name and type of playlist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"goodbye: Destroy session\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_indexes: return simple index lists to allow a quicker library fill.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"check_parameter: error when mandatory inputs are missing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stream: Raw stream of song_id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"download: Download, not recorded as a play\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get_art: Raw art file like subsonic getCoverArt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"user_create: 'user' access level only!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"user_update: update user details and passwords for non-admins\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"user_delete: you can't delete yourself or and admin account!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update_from_tags: updates a single album, artist, song from the tag data instead of the entire library!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update_art: updates a single album, artist, song running the gather_art process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update_artist_info: Update artist information and fetch similar artists from last.fm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlist_generate: Get a list of song xml, indexes or id's based on some simple search criteria. care of @4phun\")), mdx(\"h3\", null, \"Changed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authentication: Require a handshake and generate unique sessions at all times\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"advanced_search\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'is not' has been added shifting values down the list.\\n(0=contains, 1=does not contain, 2=starts with, 3=ends with, 4=is, 5=is not, 6=sounds like, 7=does not sound like)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rule_1\", \"['name']\", \" is depreciated. Instead of multiple searches for the same thing rule_1'name'\\nhas been replaced with 'title' (I have put a temp workaround into the search rules to alleviate this change)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stats\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allow songs|artists|albums (instead of just albums)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlists\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allow return of smartlists as well as regular playlists (set a 5000 limit on unlimited smartlists)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlist_add_song\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added check boolean to skip duplicate songs\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"playlist_remove_song\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow uid of song instead of the track id from the playlist\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#api-520","title":"API 5.2.0","items":[{"url":"#added","title":"Added"},{"url":"#api-511","title":"API 5.1.1"},{"url":"#fixed","title":"Fixed"},{"url":"#api-510","title":"API 5.1.0"},{"url":"#added-1","title":"Added"},{"url":"#changed","title":"Changed"},{"url":"#fixed-1","title":"Fixed"},{"url":"#api-500","title":"API 5.0.0"},{"url":"#added-2","title":"Added"},{"url":"#changed-1","title":"Changed"},{"url":"#fixed-2","title":"Fixed"},{"url":"#api-442","title":"API 4.4.2"},{"url":"#fixed-3","title":"Fixed"},{"url":"#api-441","title":"API 4.4.1"},{"url":"#fixed-4","title":"Fixed"}]},{"url":"#api-440","title":"API 4.4.0","items":[{"url":"#added-3","title":"Added"},{"url":"#changed-2","title":"Changed"},{"url":"#fixed-5","title":"Fixed"},{"url":"#deprecated","title":"Deprecated"}]},{"url":"#api-430","title":"API 4.3.0","items":[{"url":"#changed-3","title":"Changed"}]},{"url":"#api-426","title":"API 4.2.6"},{"url":"#api-425","title":"API 4.2.5"},{"url":"#api-424","title":"API 4.2.4"},{"url":"#api-423","title":"API 4.2.3"},{"url":"#api-422","title":"API 4.2.2","items":[{"url":"#added-4","title":"Added"},{"url":"#changed-4","title":"Changed"},{"url":"#deprecated-1","title":"Deprecated"},{"url":"#fixed-6","title":"Fixed"}]},{"url":"#api-421","title":"API 4.2.1","items":[{"url":"#fixed-7","title":"Fixed"}]},{"url":"#api-420","title":"API 4.2.0","items":[{"url":"#added-5","title":"Added"},{"url":"#changed-5","title":"Changed"},{"url":"#deprecated-2","title":"Deprecated"},{"url":"#fixed-8","title":"Fixed"}]},{"url":"#api-400-build-004","title":"API 4.0.0 build 004","items":[{"url":"#added-6","title":"Added"},{"url":"#fixed-9","title":"Fixed"}]},{"url":"#api-400-build-003","title":"API 4.0.0 build 003","items":[{"url":"#added-7","title":"Added"},{"url":"#changed-6","title":"Changed"},{"url":"#removed","title":"Removed"},{"url":"#fixed-10","title":"Fixed"}]},{"url":"#api-400-build-001","title":"API 4.0.0 build 001","items":[{"url":"#added-8","title":"Added"},{"url":"#changed-7","title":"Changed"}]}]},"parent":{"__typename":"File","relativePath":"api-changelog.md"},"frontmatter":{"metaTitle":"Changelog","metaDescription":"API Changelog"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/api-standards","title":"API 5 Standards"}}},{"node":{"fields":{"slug":"/api-acls","title":"Access Control Lists"}}},{"node":{"fields":{"slug":"/api-errors","title":"API 5 Errors"}}},{"node":{"fields":{"slug":"/versions","title":"Past Releases"}}},{"node":{"fields":{"slug":"/versions/api-5.0/api-errors","title":"API 5.0 Errors"}}},{"node":{"fields":{"slug":"/versions/api-5.0","title":"API 5.0"}}},{"node":{"fields":{"slug":"/api-4/api-errors","title":"API 4 Errors"}}},{"node":{"fields":{"slug":"/versions/api-5.0/api-advanced-search","title":"API 5.0 advanced_search"}}},{"node":{"fields":{"slug":"/versions/api-5.0/api-json-methods","title":"API 5.0 JSON Methods"}}},{"node":{"fields":{"slug":"/versions/api-4.1","title":"API 4.1"}}},{"node":{"fields":{"slug":"/versions/api-5.0/api-standards","title":"API 5.0 Standards"}}},{"node":{"fields":{"slug":"/versions/api-5.0/api-xml-methods","title":"API 5.0 XML Methods"}}},{"node":{"fields":{"slug":"/versions/api-4.2","title":"API 4.2"}}},{"node":{"fields":{"slug":"/versions/api-4.3","title":"API 4.3"}}},{"node":{"fields":{"slug":"/versions/api-5.1","title":"API 5.1"}}},{"node":{"fields":{"slug":"/versions/api-4.2/api-advanced-search","title":"advanced_search 4.2"}}},{"node":{"fields":{"slug":"/versions/api-5.1/api-standards","title":"API 5.1 Standards"}}},{"node":{"fields":{"slug":"/api-3/api-errors","title":"API 3 Errors"}}},{"node":{"fields":{"slug":"/api-4","title":"API 4"}}},{"node":{"fields":{"slug":"/api-advanced-search","title":"advanced_search"}}},{"node":{"fields":{"slug":"/api-3/api-xml-methods","title":"API 3 XML"}}},{"node":{"fields":{"slug":"/","title":"Ampache API"}}},{"node":{"fields":{"slug":"/api-changelog","title":"Changelog"}}},{"node":{"fields":{"slug":"/versions/api-4.2/api-errors","title":"Errors 4.2"}}},{"node":{"fields":{"slug":"/api-examples","title":"Examples"}}},{"node":{"fields":{"slug":"/api-3","title":"API 3"}}},{"node":{"fields":{"slug":"/api-4/api-xml-methods","title":"API 4 XML"}}},{"node":{"fields":{"slug":"/versions/api-4.1/xml-methods","title":"XML 4.1"}}},{"node":{"fields":{"slug":"/versions/api-5.1/api-errors","title":"API 5.1 Errors"}}},{"node":{"fields":{"slug":"/versions/api-4.1/api","title":"API 4.1"}}},{"node":{"fields":{"slug":"/api-4/api-json-methods","title":"API 4 JSON"}}},{"node":{"fields":{"slug":"/versions/api-4.2/api-json-methods","title":"JSON 4.2"}}},{"node":{"fields":{"slug":"/versions/api-5.1/api-json-methods","title":"API 5.1 JSON Methods"}}},{"node":{"fields":{"slug":"/api-json-methods","title":"API 5 JSON Methods"}}},{"node":{"fields":{"slug":"/versions/api-4.2/api-xml-methods","title":"XML 4.2"}}},{"node":{"fields":{"slug":"/versions/api-5.1/api-xml-methods","title":"API 5.1 XML Methods"}}},{"node":{"fields":{"slug":"/api-xml-methods","title":"API 5 XML Methods"}}},{"node":{"fields":{"slug":"/versions/api-4.3/api-advanced-search","title":"advanced_search 4.3"}}},{"node":{"fields":{"slug":"/versions/api-4.3/api-errors","title":"Errors 4.3"}}},{"node":{"fields":{"slug":"/versions/api-4.3/api-json-methods","title":"JSON 4.3"}}},{"node":{"fields":{"slug":"/versions/api-5.1/api-advanced-search","title":"API 5.1 advanced_search"}}},{"node":{"fields":{"slug":"/versions/api-4.3/api-xml-methods","title":"XML 4.3"}}}]}},"pageContext":{"id":"b29cf665-bd8a-5b1e-821f-202b11a3e986"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}