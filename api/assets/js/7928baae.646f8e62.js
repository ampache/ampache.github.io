"use strict";(self.webpackChunkampache_org_api=self.webpackChunkampache_org_api||[]).push([[9418],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>g});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var m=n.createContext({}),s=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(m.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=s(a),g=r,k=d["".concat(m,".").concat(g)]||d[g]||o[g]||l;return a?n.createElement(k,i(i({ref:e},u),{},{components:a})):n.createElement(k,i({ref:e},u))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=d;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3038:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const l={title:"API3 XML",metaTitle:"API3 XML",description:"API documentation"},i=void 0,p={unversionedId:"api-3/api-xml-methods",id:"api-3/api-xml-methods",title:"API3 XML",description:"API documentation",source:"@site/docs/api-3/api-xml-methods.md",sourceDirName:"api-3",slug:"/api-3/api-xml-methods",permalink:"/api/api-3/api-xml-methods",draft:!1,tags:[],version:"current",frontMatter:{title:"API3 XML",metaTitle:"API3 XML",description:"API documentation"},sidebar:"api",previous:{title:"API3 Errors",permalink:"/api/api-3/api-errors"},next:{title:"Past Releases",permalink:"/api/versions/"}},m={},s=[{value:"Non-Data Methods",id:"non-data-methods",level:2},{value:"handshake",id:"handshake",level:2},{value:"ping",id:"ping",level:2},{value:"url_to_song",id:"url_to_song",level:2},{value:"Data Methods",id:"data-methods",level:2},{value:"advanced_search",id:"advanced_search",level:2},{value:"Changes to text searches",id:"changes-to-text-searches",level:3},{value:"Using advanced_search",id:"using-advanced_search",level:3},{value:"artists",id:"artists",level:2},{value:"artist",id:"artist",level:2},{value:"artist_albums",id:"artist_albums",level:2},{value:"artist_songs",id:"artist_songs",level:2},{value:"albums",id:"albums",level:2},{value:"album",id:"album",level:2},{value:"album_songs",id:"album_songs",level:2},{value:"tags",id:"tags",level:2},{value:"tag",id:"tag",level:2},{value:"tag_artists",id:"tag_artists",level:2},{value:"tag_albums",id:"tag_albums",level:2},{value:"tag_songs",id:"tag_songs",level:2},{value:"songs",id:"songs",level:2},{value:"song",id:"song",level:2},{value:"playlists",id:"playlists",level:2},{value:"playlist",id:"playlist",level:2},{value:"playlist_songs",id:"playlist_songs",level:2},{value:"playlist_create",id:"playlist_create",level:2},{value:"playlist_delete",id:"playlist_delete",level:2},{value:"playlist_add_song",id:"playlist_add_song",level:2},{value:"playlist_remove_song",id:"playlist_remove_song",level:2},{value:"search_songs",id:"search_songs",level:2},{value:"videos",id:"videos",level:2},{value:"video",id:"video",level:2},{value:"stats",id:"stats",level:2},{value:"user",id:"user",level:2},{value:"followers",id:"followers",level:2},{value:"following",id:"following",level:2},{value:"toggle_follow",id:"toggle_follow",level:2},{value:"last_shouts",id:"last_shouts",level:2},{value:"rate",id:"rate",level:2},{value:"timeline",id:"timeline",level:2},{value:"friends_timeline",id:"friends_timeline",level:2},{value:"Control Methods",id:"control-methods",level:2},{value:"localplay",id:"localplay",level:2},{value:"democratic",id:"democratic",level:2}],u={toc:s};function o(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Lets go through come calls and examples that you can do for each XML method."),(0,r.kt)("h2",{id:"non-data-methods"},"Non-Data Methods"),(0,r.kt)("h2",{id:"handshake"},"handshake"),(0,r.kt)("p",null,"This is the function that handles verifying a new handshake Takes a timestamp, auth key, and username."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$passphrase (Timestamp . Password SHA hash) OR (API Key)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username (Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'timestamp'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME() (Timestamp used in seed of password hash. Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'version'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$version (API Version that the application understands)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/handshake.xml"},"Example")),(0,r.kt)("h2",{id:"ping"},"ping"),(0,r.kt)("p",null,"This can be called without being authenticated, it is useful for determining if what the status of the server is, and what version it is running/compatible with"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Session ID) returns version information and extends the session if passed"),(0,r.kt)("td",{parentName:"tr",align:null},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'version'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$version (API Version that the application understands)"),(0,r.kt)("td",{parentName:"tr",align:null},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/ping.xml"},"Example")),(0,r.kt)("h2",{id:"url_to_song"},"url_to_song"),(0,r.kt)("p",null,"This takes a url and returns the song object in question"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'url'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Full Ampache URL from server, translates back into a song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/url_to_song.xml"},"Example")),(0,r.kt)("h2",{id:"data-methods"},"Data Methods"),(0,r.kt)("h2",{id:"advanced_search"},"advanced_search"),(0,r.kt)("h3",{id:"changes-to-text-searches"},"Changes to text searches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'is not' has been added shifting values down the list.\n0=contains, 1=does not contain, 2=starts with, 3=ends with\n4=is, 5=is not, 6=sounds like, 7=does not sound like"),(0,r.kt)("li",{parentName:"ul"},"rule_1","['name']"," is depreciated. Instead of rule_1","['name']"," use rule_1","['title']"," (I have put a temp workaround into the search rules to alleviate this change for any existing apps)")),(0,r.kt)("h3",{id:"using-advanced_search"},"Using advanced_search"),(0,r.kt)("p",null,"Perform an advanced search given passed rules. This works in a similar way to the web/UI search pages.\nYou can pass multiple rules as well as joins to create in depth search results"),(0,r.kt)("p",null,"Rules must be sent in groups of 3 using an int (starting from 1) to designate which rules are combined.\nUse operator ('and'|'or') to choose whether to join or separate each rule when searching."),(0,r.kt)("p",null,"Refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://ampache.org/api/api-advanced-search"},"Advanced Search")," page for details about creating searches."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"INPUTS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ampache_url = (string)"),(0,r.kt)("li",{parentName:"ul"},"ampache_API = (string)"),(0,r.kt)("li",{parentName:"ul"},"operator = (string) 'and'|'or' (whether to match one rule or all)"),(0,r.kt)("li",{parentName:"ul"},"rules = (array) = [","[rule_1,rule_1_operator,rule_1_input]",", ","[rule_2,rule_2_operator,rule_2_input]",", ","[etc]","]"),(0,r.kt)("li",{parentName:"ul"},"type = (string) 'song', 'album', 'artist', 'playlist', 'label', 'user', 'video'"),(0,r.kt)("li",{parentName:"ul"},"random = (integer) 0|1 (random order of results; default to 0)"),(0,r.kt)("li",{parentName:"ul"},"offset = (integer)"),(0,r.kt)("li",{parentName:"ul"},"limit' = (integer)")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/advanced_search%20(song).xml"},"Example")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/advanced_search%20(artist).xml"},"Example")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/advanced_search%20(album).xml"},"Example")),(0,r.kt)("h2",{id:"artists"},"artists"),(0,r.kt)("p",null,"This takes a collection of inputs and returns artist objects."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'add' date newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'update' time newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'albums', 'songs' and will include the corresponding XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/artists.xml"},"Example")),(0,r.kt)("h2",{id:"artist"},"artist"),(0,r.kt)("p",null,"This returns a single artist based on the UID of said artist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"Array specified using GET convention, can contain ",(0,r.kt)("inlineCode",{parentName:"td"},"albums")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"songs")," and will include the corresponding XML nested in the artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/artist.xml"},"Example")),(0,r.kt)("h2",{id:"artist_albums"},"artist_albums"),(0,r.kt)("p",null,"This returns the albums of an artist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/artist_albums.xml"},"Example")),(0,r.kt)("h2",{id:"artist_songs"},"artist_songs"),(0,r.kt)("p",null,"This returns the songs of the specified artist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/artist_songs.xml"},"Example")),(0,r.kt)("h2",{id:"albums"},"albums"),(0,r.kt)("p",null,"This returns albums based on the provided search filters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'add' date newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'update' time newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'albums', 'songs' will include nested in the album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/albums.xml"},"Example")),(0,r.kt)("h2",{id:"album"},"album"),(0,r.kt)("p",null,"This returns a single album based on the UID provided"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"Array specified using GET convention, can contain ",(0,r.kt)("inlineCode",{parentName:"td"},"songs")," and will include the corresponding XML nested in the album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/album.xml"},"Example")),(0,r.kt)("h2",{id:"album_songs"},"album_songs"),(0,r.kt)("p",null,"This returns the songs of a specified album"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/album_songs.xml"},"Example")),(0,r.kt)("h2",{id:"tags"},"tags"),(0,r.kt)("p",null,"This returns the tags (Genres) based on the specified filter"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," For API3 forward compatability, this function is also called with ",(0,r.kt)("inlineCode",{parentName:"p"},"genres")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/tags.xml"},"Example")),(0,r.kt)("h2",{id:"tag"},"tag"),(0,r.kt)("p",null,"This returns a single tag based on UID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," For API3 forward compatability, this function is also called with ",(0,r.kt)("inlineCode",{parentName:"p"},"genre")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns tag XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/tag.xml"},"Example")),(0,r.kt)("h2",{id:"tag_artists"},"tag_artists"),(0,r.kt)("p",null,"This returns the artists associated with the tag in question as defined by the UID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," For API3 forward compatability, this function is also called with ",(0,r.kt)("inlineCode",{parentName:"p"},"genre_artists")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/tag_artists.xml"},"Example")),(0,r.kt)("h2",{id:"tag_albums"},"tag_albums"),(0,r.kt)("p",null,"This returns the albums associated with the tag in question"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," For API3 forward compatability, this function is also called with ",(0,r.kt)("inlineCode",{parentName:"p"},"genre_albums")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/tag_albums.xml"},"Example")),(0,r.kt)("h2",{id:"tag_songs"},"tag_songs"),(0,r.kt)("p",null,"returns the songs for this tag"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," For API3 forward compatability, this function is also called with ",(0,r.kt)("inlineCode",{parentName:"p"},"genre_songs")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/tag_songs.xml"},"Example")),(0,r.kt)("h2",{id:"songs"},"songs"),(0,r.kt)("p",null,"Returns songs based on the specified filter"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'add' date newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find objects with an 'update' time newer than the specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/songs.xml"},"Example")),(0,r.kt)("h2",{id:"song"},"song"),(0,r.kt)("p",null,"returns a single song"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Song, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/song.xml"},"Example")),(0,r.kt)("h2",{id:"playlists"},"playlists"),(0,r.kt)("p",null,"This returns playlists based on the specified filter"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlists.xml"},"Example")),(0,r.kt)("h2",{id:"playlist"},"playlist"),(0,r.kt)("p",null,"This returns a single playlist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of playlist, returns playlist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_songs"},"playlist_songs"),(0,r.kt)("p",null,"This returns the songs for a playlist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist_songs.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_create"},"playlist_create"),(0,r.kt)("p",null,"This create a new playlist and return it"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'name'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist type 'public', 'private'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist_create.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_delete"},"playlist_delete"),(0,r.kt)("p",null,"This deletes a playlist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist_delete.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_add_song"},"playlist_add_song"),(0,r.kt)("p",null,"This adds a song to a playlist. setting check=1 will not add duplicates to the playlist"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of song to add to playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist_add_song.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_remove_song"},"playlist_remove_song"),(0,r.kt)("p",null,"This remove a song from a playlist."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," In API3 this function don't not allow ",(0,r.kt)("inlineCode",{parentName:"p"},"song")," parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'track'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Track number to remove from playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/playlist_remove_song.xml"},"Example")),(0,r.kt)("h2",{id:"search_songs"},"search_songs"),(0,r.kt)("p",null,"This searches the songs and returns... songs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for Name returns share XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/search_songs.xml"},"Example")),(0,r.kt)("h2",{id:"videos"},"videos"),(0,r.kt)("p",null,"This returns video objects!"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/videos.xml"},"Example")),(0,r.kt)("h2",{id:"video"},"video"),(0,r.kt)("p",null,"This returns a single video"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of video, returns video XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/video.xml"},"Example")),(0,r.kt)("h2",{id:"stats"},"stats"),(0,r.kt)("p",null,"Get some items based on some simple search types and filters."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," In API3 this function only returns albums"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'newest', 'highest', 'frequent', 'recent', 'forgotten', 'random'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Used for recent searches."),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return results starting from this index position"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/stats%20(song).xml"},"Example")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/stats%20(artist).xml"},"Example")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/stats%20(album).xml"},"Example")),(0,r.kt)("h2",{id:"user"},"user"),(0,r.kt)("p",null,"This get an user public information"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get details"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/user.xml"},"Example")),(0,r.kt)("h2",{id:"followers"},"followers"),(0,r.kt)("p",null,"This get an user followers"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get followers list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/followers.xml"},"Example")),(0,r.kt)("h2",{id:"following"},"following"),(0,r.kt)("p",null,"This get the user list followed by an user"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Username of the user for who to get following list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/following.xml"},"Example")),(0,r.kt)("h2",{id:"toggle_follow"},"toggle_follow"),(0,r.kt)("p",null,"This follow/unfollow an user"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user to follow/unfollow"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/toggle_follow.xml"},"Example")),(0,r.kt)("h2",{id:"last_shouts"},"last_shouts"),(0,r.kt)("p",null,"This get the latest posted shouts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get latest shouts"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/last_shouts.xml"},"Example")),(0,r.kt)("h2",{id:"rate"},"rate"),(0,r.kt)("p",null,"This rates a library item"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'album', 'artist', 'playlist',"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"'podcast', 'podcast_episode', 'video'"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"'tvshow', 'tvshow_season'"),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"library item id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'rating'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"rating between 0-5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/rate.xml"},"Example")),(0,r.kt)("h2",{id:"timeline"},"timeline"),(0,r.kt)("p",null,"This get an user timeline"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for whom to get the timeline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/timeline.xml"},"Example")),(0,r.kt)("h2",{id:"friends_timeline"},"friends_timeline"),(0,r.kt)("p",null,"This get current user friends timeline"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of results to return"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/friends_timeline.xml"},"Example")),(0,r.kt)("h2",{id:"control-methods"},"Control Methods"),(0,r.kt)("h2",{id:"localplay"},"localplay"),(0,r.kt)("p",null,"This is for controlling localplay"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'command'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'next', 'prev', 'stop', 'play'"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"return")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},"<root>\n    <localplay>\n        <command>\n            <next>|<prev>|<stop>|<play>|<pause>|<add>|<volume_up>|<volume_down>|<volume_mute>|<delete_all>|<skip>|<status>\n        </command>\n    </localplay>\n</root>\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/api3/docs/xml-responses/localplay.xml"},"Example")),(0,r.kt)("h2",{id:"democratic"},"democratic"),(0,r.kt)("p",null,"This is for controlling democratic play"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ACTION",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"method",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"vote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"))),(0,r.kt)("li",{parentName:"ul"},"devote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"))),(0,r.kt)("li",{parentName:"ul"},"playlist (Returns an array of song items with an additional \\",(0,r.kt)("vote",null,"[VOTE COUNT]","\\")," element)"),(0,r.kt)("li",{parentName:"ul"},"play (Returns the URL for playing democratic play)")))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'oid'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Song object"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'method'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"vote, devote, playlist, play"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},"TBC\n")))}o.isMDXComponent=!0}}]);