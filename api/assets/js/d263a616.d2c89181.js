"use strict";(self.webpackChunkampache_org_api=self.webpackChunkampache_org_api||[]).push([[2600],{276:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>r,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"api-changelog","title":"API Changelog","description":"API Changelog","source":"@site/docs/api-changelog.md","sourceDirName":".","slug":"/api-changelog","permalink":"/api/api-changelog","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"API Changelog","metaTitle":"API Changelog","description":"API Changelog"},"sidebar":"api","previous":{"title":"API Examples","permalink":"/api/api-examples"},"next":{"title":"Access Control Lists","permalink":"/api/api-acls"}}');var l=i(4848),d=i(8453);const r={title:"API Changelog",metaTitle:"API Changelog",description:"API Changelog"},a=void 0,c={},t=[{value:"API 6.6.7",id:"api-667",level:2},{value:"Changed",id:"changed",level:3},{value:"API 6.6.6",id:"api-666",level:2},{value:"Fixed",id:"fixed",level:3},{value:"API 6.6.5",id:"api-665",level:2},{value:"Added",id:"added",level:3},{value:"Fixed",id:"fixed-1",level:3},{value:"API 6.6.4",id:"api-664",level:2},{value:"Added",id:"added-1",level:3},{value:"Changed",id:"changed-1",level:3},{value:"API 6.6.3",id:"api-663",level:2},{value:"API 6.6.2",id:"api-662",level:2},{value:"Added",id:"added-2",level:3},{value:"Fixed",id:"fixed-2",level:3},{value:"API 6.6.1",id:"api-661",level:2},{value:"Added",id:"added-3",level:3},{value:"Changed",id:"changed-2",level:3},{value:"API 6.6.0",id:"api-660",level:2},{value:"Added",id:"added-4",level:3},{value:"Changed",id:"changed-3",level:3},{value:"Fixed",id:"fixed-3",level:3},{value:"API 6.4.0",id:"api-640",level:2},{value:"Added",id:"added-5",level:3},{value:"Changed",id:"changed-4",level:3},{value:"Fixed",id:"fixed-4",level:3},{value:"API 6.3.1",id:"api-631",level:2},{value:"Added",id:"added-6",level:3},{value:"API 6.3.0",id:"api-630",level:2},{value:"Added",id:"added-7",level:3},{value:"Changed",id:"changed-5",level:3},{value:"Fixed",id:"fixed-5",level:3},{value:"API 6.2.0",id:"api-620",level:2},{value:"Added",id:"added-8",level:3},{value:"Changed",id:"changed-6",level:3},{value:"Fixed",id:"fixed-6",level:3},{value:"API 6.1.0",id:"api-610",level:2},{value:"Added",id:"added-9",level:3},{value:"Changed",id:"changed-7",level:3},{value:"Fixed",id:"fixed-7",level:3},{value:"API 6.0.3",id:"api-603",level:2},{value:"Added",id:"added-10",level:3},{value:"Fixed",id:"fixed-8",level:3},{value:"API 6.0.2",id:"api-602",level:2},{value:"API 6.0.1",id:"api-601",level:2},{value:"Changed",id:"changed-8",level:3},{value:"Fixed",id:"fixed-9",level:3},{value:"API 6.0.0",id:"api-600",level:2},{value:"Added",id:"added-11",level:3},{value:"Changed",id:"changed-9",level:3},{value:"Removed",id:"removed",level:3},{value:"Fixed",id:"fixed-10",level:3},{value:"API 5.6.4",id:"api-564",level:2},{value:"Fixed",id:"fixed-11",level:3},{value:"API 5.6.3",id:"api-563",level:2},{value:"Added",id:"added-12",level:3},{value:"Fixed",id:"fixed-12",level:3},{value:"API 5.6.2",id:"api-562",level:2},{value:"Fixed",id:"fixed-13",level:3},{value:"API 5.6.1",id:"api-561",level:2},{value:"API 5.6.0",id:"api-560",level:2},{value:"Fixed",id:"fixed-14",level:3},{value:"API 5.5.6",id:"api-556",level:2},{value:"Changed",id:"changed-10",level:3},{value:"Fixed",id:"fixed-15",level:3},{value:"API 5.5.4",id:"api-554",level:2},{value:"Fixed",id:"fixed-16",level:3},{value:"API 5.5.3",id:"api-553",level:2},{value:"API 5.5.2",id:"api-552",level:2},{value:"Added",id:"added-13",level:3},{value:"Fixed",id:"fixed-17",level:3},{value:"API 5.5.1",id:"api-551",level:2},{value:"API 5.5.0",id:"api-550",level:2},{value:"Added",id:"added-14",level:3},{value:"Fixed",id:"fixed-18",level:3},{value:"API  5.4.1",id:"api--541",level:2},{value:"Added",id:"added-15",level:3},{value:"API 5.4.0",id:"api-540",level:2},{value:"Added",id:"added-16",level:3},{value:"API 5.3.3",id:"api-533",level:2},{value:"Added",id:"added-17",level:3},{value:"API 5.3.2",id:"api-532",level:2},{value:"API 5.3.1",id:"api-531",level:2},{value:"API 5.3.0",id:"api-530",level:2},{value:"Added",id:"added-18",level:3},{value:"API 5.2.1",id:"api-521",level:2},{value:"Changed",id:"changed-11",level:3},{value:"Fixed",id:"fixed-19",level:3},{value:"API 5.2.0",id:"api-520",level:2},{value:"Added",id:"added-19",level:3},{value:"API 5.1.1",id:"api-511",level:2},{value:"Fixed",id:"fixed-20",level:3},{value:"API 5.1.0",id:"api-510",level:2},{value:"Added",id:"added-20",level:3},{value:"Changed",id:"changed-12",level:3},{value:"Fixed",id:"fixed-21",level:3},{value:"API 5.0.0",id:"api-500",level:2},{value:"Added",id:"added-21",level:3},{value:"Changed",id:"changed-13",level:3},{value:"Fixed",id:"fixed-22",level:3},{value:"API 4.4.2",id:"api-442",level:2},{value:"Fixed",id:"fixed-23",level:3},{value:"API 4.4.1",id:"api-441",level:2},{value:"Fixed",id:"fixed-24",level:3},{value:"API 4.4.0",id:"api-440",level:2},{value:"Added",id:"added-22",level:3},{value:"Changed",id:"changed-14",level:3},{value:"Fixed",id:"fixed-25",level:3},{value:"Deprecated",id:"deprecated",level:3},{value:"API 4.3.0",id:"api-430",level:2},{value:"Changed",id:"changed-15",level:3},{value:"API 4.2.6",id:"api-426",level:2},{value:"API 4.2.5",id:"api-425",level:2},{value:"API 4.2.4",id:"api-424",level:2},{value:"API 4.2.3",id:"api-423",level:2},{value:"API 4.2.2",id:"api-422",level:2},{value:"Added",id:"added-23",level:3},{value:"Changed",id:"changed-16",level:3},{value:"Deprecated",id:"deprecated-1",level:3},{value:"Fixed",id:"fixed-26",level:3},{value:"API 4.2.1",id:"api-421",level:2},{value:"Fixed",id:"fixed-27",level:3},{value:"API 4.2.0",id:"api-420",level:2},{value:"Added",id:"added-24",level:3},{value:"Changed",id:"changed-17",level:3},{value:"Deprecated",id:"deprecated-2",level:3},{value:"Fixed",id:"fixed-28",level:3},{value:"API 4.0.0 build 004",id:"api-400-build-004",level:2},{value:"Added",id:"added-25",level:3},{value:"Fixed",id:"fixed-29",level:3},{value:"API 4.0.0 build 003",id:"api-400-build-003",level:2},{value:"Added",id:"added-26",level:3},{value:"Changed",id:"changed-18",level:3},{value:"Removed",id:"removed-1",level:3},{value:"Fixed",id:"fixed-30",level:3},{value:"API 4.0.0 build 001",id:"api-400-build-001",level:2},{value:"Added",id:"added-27",level:3},{value:"Changed",id:"changed-19",level:3}];function h(e){const n={a:"a",code:"code",del:"del",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.RP)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"api-667",children:"API 6.6.7"}),"\n",(0,l.jsx)(n.h3,{id:"changed",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["stats: Allow ",(0,l.jsx)(n.code,{children:"limit"})," -1 for no limit. (0 falls back to ",(0,l.jsx)(n.code,{children:"popular_threshold"})," value)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-666",children:"API 6.6.6"}),"\n",(0,l.jsx)(n.p,{children:"Merge update from Ampache7."}),"\n",(0,l.jsx)(n.h3,{id:"fixed",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Not checking auth on User lookup"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-665",children:"API 6.6.5"}),"\n",(0,l.jsx)(n.p,{children:"Merge update from Ampache7."}),"\n",(0,l.jsx)(n.h3,{id:"added",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"disk_count"})," to Album & AlbumDisk search types"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"no_license"})," to Song search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-1",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_indexes: Respect 'api_hidden_playlists'"}),"\n",(0,l.jsx)(n.li,{children:"index: Respect 'api_hidden_playlists'"}),"\n",(0,l.jsx)(n.li,{children:"list: Respect 'api_hidden_playlists'"}),"\n",(0,l.jsx)(n.li,{children:"playlists: Respect 'api_hidden_playlists'"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_indexes: Respect 'api_hidden_playlists'"}),"\n",(0,l.jsx)(n.li,{children:"playlists: Respect 'api_hidden_playlists'"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-664",children:"API 6.6.4"}),"\n",(0,l.jsx)(n.p,{children:"Merge update from Ampache7."}),"\n",(0,l.jsx)(n.p,{children:"This update has counting updates to allow faster responses on larger results"}),"\n",(0,l.jsx)(n.h3,{id:"added-1",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use set_count function on data classes to speed up counting response totals"}),"\n",(0,l.jsxs)(n.li,{children:["Validate ",(0,l.jsx)(n.code,{children:"website"})," for ",(0,l.jsx)(n.code,{children:"user_edit"})]}),"\n",(0,l.jsxs)(n.li,{children:["Use split search for search methods","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"advanced_search / search"}),"\n",(0,l.jsx)(n.li,{children:"search_songs"}),"\n",(0,l.jsx)(n.li,{children:"user_update"}),"\n",(0,l.jsx)(n.li,{children:"playlist_generate"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use split search for search methods","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"advanced_search"}),"\n",(0,l.jsx)(n.li,{children:"search_songs"}),"\n",(0,l.jsx)(n.li,{children:"user_update"}),"\n",(0,l.jsx)(n.li,{children:"playlist_generate"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use split search for search methods","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"advanced_search"}),"\n",(0,l.jsx)(n.li,{children:"search_songs"}),"\n",(0,l.jsx)(n.li,{children:"user_update"}),"\n",(0,l.jsx)(n.li,{children:"playlist_generate"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use split search for search methods","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"advanced_search"}),"\n",(0,l.jsx)(n.li,{children:"search_songs"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-1",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Rename API-CHANGELOG.md => CHANGELOG-API.md"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-663",children:"API 6.6.3"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-662",children:"API 6.6.2"}),"\n",(0,l.jsx)(n.h3,{id:"added-2",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"stats"})," parameter to stream and download methods (If false disable stat recording when playing the object)"]}),"\n",(0,l.jsxs)(n.li,{children:["Respect ",(0,l.jsx)(n.code,{children:"api_always_download"})," in stream and download methods"]}),"\n",(0,l.jsx)(n.li,{children:"Add sorting to stats calls"}),"\n",(0,l.jsxs)(n.li,{children:["add ",(0,l.jsx)(n.code,{children:"user"})," object to playlist responses (owner of the playlist)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-2",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"index: Artist index not showing albums"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-661",children:"API 6.6.1"}),"\n",(0,l.jsx)(n.p,{children:"This release keeps parity between Ampache7 releases by backporting the updated code."}),"\n",(0,l.jsx)(n.h3,{id:"added-3",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add maximum ID properties to ",(0,l.jsx)(n.code,{children:"handshake"})," and ",(0,l.jsx)(n.code,{children:"ping"})," (with auth) responses for media types","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"max_song"}),", ",(0,l.jsx)(n.code,{children:"max_album"}),", ",(0,l.jsx)(n.code,{children:"max_artist"}),", ",(0,l.jsx)(n.code,{children:"max_video"}),", ",(0,l.jsx)(n.code,{children:"max_podcast"}),", ",(0,l.jsx)(n.code,{children:"max_podcast_episode"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["flag: add ",(0,l.jsx)(n.code,{children:"date"})," as a parameter (set the time for your flag)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-2",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"lost_password: deny access in simple_user_mode"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-660",children:"API 6.6.0"}),"\n",(0,l.jsxs)(n.p,{children:["Like with ",(0,l.jsx)(n.code,{children:"total_count"}),", we've added an md5sum of the results (called ",(0,l.jsx)(n.code,{children:"md5"}),") in responses"]}),"\n",(0,l.jsx)(n.p,{children:"This is useful for recording whether you need to update or change results."}),"\n",(0,l.jsx)(n.p,{children:"Inconsistency with the return of object arrays and single items have been fixed and docs updated."}),"\n",(0,l.jsx)(n.h3,{id:"added-4",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Track user IP on handshake and ping calls"}),"\n",(0,l.jsx)(n.li,{children:"playlist_edit: separate error when the playlist doesn't exist"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New Method: playlist_hash (Get the MD5 hash of the playlist without getting the whole object)"}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"md5"})," to responses. (Hash objects in the response before slicing and limiting)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"md5"})," property to playlist objects. (Hash of song objects in the response)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"username"})," property to handshake and ping (with auth) responses to workaround missing usernames in token auth"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"has_access"})," property to playlist objects. (Can edit the playlist if true)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"has_collaborate"})," property to playlist objects. (Can add and remove songs to the playlist if true)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"last_update"})," property to playlist objects. (Time a playlist changed. Smartplaylists do not change based on returned songs)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-3",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlist_edit: Add songs if you're a collaborator and ignore edit parameters if you fail has_access check"}),"\n",(0,l.jsx)(n.li,{children:"catalog_add: Do not return an object. (We return a single item)"}),"\n",(0,l.jsx)(n.li,{children:"bookmark_create: Do not return an object. (We return a single item)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-3",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"User preferences were not initiated and the server preferences would overwrite differences"}),"\n",(0,l.jsx)(n.li,{children:"Api::set_user_id function sending an int instead of a user"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"JSON: Send empty array for missing single item methods"}),"\n",(0,l.jsx)(n.li,{children:"lost_password: function name incorrect"}),"\n",(0,l.jsx)(n.li,{children:"flag: id smartplaylists correctly"}),"\n",(0,l.jsx)(n.li,{children:"rate: id smartplaylists correctly"}),"\n",(0,l.jsx)(n.li,{children:"albums: Browse user may not be set"}),"\n",(0,l.jsx)(n.li,{children:"podcast_episodes: Browse user may not be set"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-640",children:"API 6.4.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-5",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Downgrade any API7 calls to API6 ",(0,l.jsx)(n.a,{href:"https://github.com/ampache/ampache/wiki/ampache7-for-admins#there-is-no-api7-only-api6-and-5-4-and-3-too",children:"wiki"})]}),"\n",(0,l.jsxs)(n.li,{children:["New Method: player (Inform the server about the state of your client player)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Returns ",(0,l.jsx)(n.code,{children:"now_playing"})," state on completion"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["download: add ",(0,l.jsx)(n.code,{children:"bitrate"})," parameter"]}),"\n",(0,l.jsxs)(n.li,{children:["playlists: add ",(0,l.jsx)(n.code,{children:"include"})," parameter (",(0,l.jsx)(n.strong,{children:"note"})," this can be massive and slow when searches are included)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-4",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Do not translate API ",(0,l.jsx)(n.code,{children:"errorMessage"})," strings ",(0,l.jsx)(n.a,{href:"https://ampache.org/api/api-errors",children:"ampache.org"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-4",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Download method format parameter didn't have a fallback value"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlist: error check for missing/deleted playlists"}),"\n",(0,l.jsx)(n.li,{children:"playlist_songs: error check for missing/deleted playlists"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Playlists objects would not return duplicates items if allowed"}),"\n",(0,l.jsx)(n.li,{children:"has_art property missing from songs and albums"}),"\n",(0,l.jsx)(n.li,{children:"playlist_add: couldn't add a single item"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-631",children:"API 6.3.1"}),"\n",(0,l.jsx)(n.h3,{id:"added-6",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New Method: now_playing (Get what is currently being played by all users.)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-630",children:"API 6.3.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-7",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New Method: search_group (return multiple object types from a single set of search rules)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: search (alias for advanced_search)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: user_playlists (return user playlists and does not include smartlists)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: user_smartlists (return user smartlists (searches) and does not include playlists)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: playlist_add (add songs to a playlist, allowing different song parent types)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: index (replaces get_indexes with a simpler list of id's. children can be included)"}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"has_art"})," parameter to any object with an ",(0,l.jsx)(n.code,{children:"art"})," url"]}),"\n",(0,l.jsx)(n.li,{children:"Add avatar url to user objects"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-5",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["playlist_add_song: depreciated and will be removed in ",(0,l.jsx)(n.strong,{children:"API7"})," (Use playlist_add)"]}),"\n",(0,l.jsx)(n.li,{children:"share_create: add more valid types ('playlist', 'podcast', 'podcast_episode', 'video')"}),"\n",(0,l.jsx)(n.li,{children:"user: make username optional"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-5",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Userflag wasn't sending bool when cached in the database"}),"\n",(0,l.jsx)(n.li,{children:"Admin would always get everyones playlists when filtering"}),"\n",(0,l.jsx)(n.li,{children:"Stream methods would not send the bitrate correctly"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlists method not respecting like for smartlists"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlists method not respecting like for smartlists"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlists method not respecting like for smartlists"}),"\n",(0,l.jsxs)(n.li,{children:["playlist_edit method will decode html ",(0,l.jsx)(n.code,{children:","})," separators"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-620",children:"API 6.2.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-8",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API: Allow non-expiring user sessions when using a header token"}),"\n",(0,l.jsx)(n.li,{children:"Allow endless api sessions. (You should start using http header auth to hide these)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-6",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Set default API version to 6 (was 5)"}),"\n",(0,l.jsxs)(n.li,{children:["Allow raising and lowering response version on ping to ",(0,l.jsx)(n.strong,{children:"any"})," version"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Return error on handshake version failure"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-6",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"UrlToSong couldn't handle encoded urls"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Video data would get an incorrect stream url"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"bookmark_create: type is mandatory"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"bookmark_create: type is mandatory"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-610",children:"API 6.1.0"}),"\n",(0,l.jsx)(n.p,{children:"Two new methods have been added"}),"\n",(0,l.jsx)(n.p,{children:"The bookmark methods have had a bit of a rework as they were not very useful"}),"\n",(0,l.jsx)(n.p,{children:"Finally the issues with setting your auth token in the http header have been fixed"}),"\n",(0,l.jsx)(n.h3,{id:"added-9",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New Method: bookmark (Get single bookmark by bookmark_id)"}),"\n",(0,l.jsx)(n.li,{children:"New Method: lost_password (Allows a non-admin user to reset their password)"}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_create: Add ",(0,l.jsx)(n.code,{children:"include"})," parameter (if true include the object in the bookmark)"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_edit: Add ",(0,l.jsx)(n.code,{children:"include"})," parameter (if true include the object in the bookmark)"]}),"\n",(0,l.jsxs)(n.li,{children:["get_bookmark","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"include"})," parameter (if true include the object in the bookmark)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"all"})," parameter (if true include every bookmark for the object)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmarks","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add parameter ",(0,l.jsx)(n.code,{children:"client"})," to filter by specific groups of bookmarks"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"include"})," parameter (if true include the object in the bookmark)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-7",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"bookmark_edit: show error on missing bookmark instead of empty object"}),"\n",(0,l.jsx)(n.li,{children:"bookmark_delete: show error on missing bookmark instead of empty object"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["get_bookmark","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["add bookmark as a valid ",(0,l.jsx)(n.code,{children:"object_type"})]}),"\n",(0,l.jsx)(n.li,{children:"Don't return single JSON bookmarks as an object"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_create: Remove ",(0,l.jsx)(n.code,{children:"client"})," parameter default value ('AmpacheAPI')"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_edit","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Remove ",(0,l.jsx)(n.code,{children:"client"})," parameter default value ('AmpacheAPI')"]}),"\n",(0,l.jsx)(n.li,{children:"show error on missing bookmark instead of empty object"}),"\n",(0,l.jsxs)(n.li,{children:["add bookmark as a valid ",(0,l.jsx)(n.code,{children:"object_type"})]}),"\n",(0,l.jsx)(n.li,{children:"Don't return single JSON bookmarks as an object"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_delete","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Remove ",(0,l.jsx)(n.code,{children:"client"})," parameter default value ('AmpacheAPI')"]}),"\n",(0,l.jsx)(n.li,{children:"show error on missing bookmark instead of empty object"}),"\n",(0,l.jsxs)(n.li,{children:["add bookmark as a valid ",(0,l.jsx)(n.code,{children:"object_type"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-7",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"handshake: auth failure with header token"}),"\n",(0,l.jsxs)(n.li,{children:["playlist_generate: Don't error when optional ",(0,l.jsx)(n.code,{children:"mode"})," and ",(0,l.jsx)(n.code,{children:"format"})," are not set"]}),"\n",(0,l.jsx)(n.li,{children:"advanced_search: runtime error on empty data type"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix lots of Runtime Error's on missing optional data"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix lots of Runtime Error's on missing optional data"}),"\n",(0,l.jsxs)(n.li,{children:["genre_artists, genre_albums, genre_songs: Parameter ",(0,l.jsx)(n.code,{children:"filter"})," runtime errors"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_edit","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Missing user id in data array"}),"\n",(0,l.jsx)(n.li,{children:"Not able to edit all bookmarks"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix lots of Runtime Error's on missing optional data"}),"\n",(0,l.jsx)(n.li,{children:"catalog_folder didn't get the group of items correctly"}),"\n",(0,l.jsxs)(n.li,{children:["genre_artists, genre_albums, genre_songs: Parameter ",(0,l.jsx)(n.code,{children:"filter"})," runtime errors"]}),"\n",(0,l.jsxs)(n.li,{children:["bookmark_edit","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Missing user id in data array"}),"\n",(0,l.jsx)(n.li,{children:"Not able to edit all bookmarks"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-603",children:"API 6.0.3"}),"\n",(0,l.jsx)(n.h3,{id:"added-10",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API5::playlist_songs: Add ",(0,l.jsx)(n.code,{children:"random"})," to get random objects filtered by limit"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-8",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"handshake: runtime errors with bad username"}),"\n",(0,l.jsx)(n.li,{children:"handshake: Don't error on empty data counts"}),"\n",(0,l.jsx)(n.li,{children:"ping: Don't error on empty data counts"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"list: searches were missing from playlists"}),"\n",(0,l.jsx)(n.li,{children:"browse: XML returned a list instead of a browse object"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-602",children:"API 6.0.2"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-601",children:"API 6.0.1"}),"\n",(0,l.jsx)(n.h3,{id:"changed-8",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6 XML","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_similar: return song objects to match json"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-9",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"user_preference: returned array instead of object"}),"\n",(0,l.jsx)(n.li,{children:"system_preference: returned array instead of object"}),"\n",(0,l.jsx)(n.li,{children:"preference_create: returned array instead of object"}),"\n",(0,l.jsx)(n.li,{children:"preference_edit: returned array instead of object"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-600",children:"API 6.0.0"}),"\n",(0,l.jsxs)(n.p,{children:["Stream token's will let you design permalinked streams and allow users to stream iwhtout re authenticating to the server. ",(0,l.jsx)(n.a,{href:"https://github.com/ampache/ampache/wiki/ampache6-details#allow-permalink-user-streams",children:"wiki"})]}),"\n",(0,l.jsx)(n.h3,{id:"added-11",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API5::playlist_songs: Add ",(0,l.jsx)(n.code,{children:"random"})," to get random objects filtered by limit"]}),"\n",(0,l.jsxs)(n.li,{children:["API6 (Based on API5)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API6::browse: List server contents in a directory-style listing (Music, Podcast and Video catalogs)"}),"\n",(0,l.jsxs)(n.li,{children:["API6::list: Replace get_indexes with a faster lookup and similar parameters returning ",(0,l.jsx)(n.code,{children:"id"}),", ",(0,l.jsx)(n.code,{children:"name"}),", ",(0,l.jsx)(n.code,{children:"prefix"})," and ",(0,l.jsx)(n.code,{children:"basename"})]}),"\n",(0,l.jsx)(n.li,{children:"API6::catalog_add: Create a catalog (Require: 75)"}),"\n",(0,l.jsx)(n.li,{children:"API6::catalog_delete: Delete a catalog (Require: 75)"}),"\n",(0,l.jsx)(n.li,{children:"API6::live_stream_create: Create a new live stream (radio station)"}),"\n",(0,l.jsx)(n.li,{children:"API6::live_stream_edit: Edit a live stream"}),"\n",(0,l.jsx)(n.li,{children:"API6::live_stream_delete: Delete a stream by ID"}),"\n",(0,l.jsx)(n.li,{children:"API6::register: Allow users to register an account (if enabled)"}),"\n",(0,l.jsx)(n.li,{children:"API6::playlist_create: Return an error if the playlist name already exists for that user"}),"\n",(0,l.jsxs)(n.li,{children:["API6::playlist_songs: Add ",(0,l.jsx)(n.code,{children:"random"})," to get random objects filtered by limit"]}),"\n",(0,l.jsxs)(n.li,{children:["API6::user_edit (previously user_create):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"group"})," parameter to pick a catalog filter group"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"fullname_public"})," to enable/disable using fullname in public display"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"reset_apikey"})," to reset a user Api Key"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"reset_streamtoken"})," to reset a user Stream Token"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"clear_stats"})," reset all stats for this user ",(0,l.jsx)(n.strong,{children:"be very sure about this one!"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"prefix"})," (Prefix for Full Name) to album & artist responses"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"basename"})," (Name without prefix) to album & artist responses"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"bitrate"})," to Democratic objects"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"format"})," to Song and Democratic objects"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"stream_format"}),", ",(0,l.jsx)(n.code,{children:"stream_bitrate"}),", ",(0,l.jsx)(n.code,{children:"stream_mime"})," to Song objects (This is the transcoded output for a stream)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add all mapped artists to song and album objects (JSON added an ",(0,l.jsx)(n.code,{children:"artists"})," element)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"bitrate"}),", ",(0,l.jsx)(n.code,{children:"stream_bitrate"}),", ",(0,l.jsx)(n.code,{children:"rate"}),", ",(0,l.jsx)(n.code,{children:"mode"}),", ",(0,l.jsx)(n.code,{children:"channels"})," to Podcast Episode objects"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["JSON responses","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Cast bool fields to ",(0,l.jsx)(n.code,{children:"true"})," and ",(0,l.jsx)(n.code,{children:"false"}),' instead of "1" & "0"']}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"total_count"})," to responses to give clients an idea of the total possible objects"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_genre"})," to album and artist searches"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"possible_duplicate_album"})," to song search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"mbid_artist"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"barcode"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"catalog_number"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"smartplaylist"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"duplicate_tracks"})," to album and song search (MIN & MAX id for song search)"]}),"\n",(0,l.jsxs)(n.li,{children:["Alias ",(0,l.jsx)(n.code,{children:"possible_duplicate_album"})," => ",(0,l.jsx)(n.code,{children:"possible_duplicate"})," for album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Alias ",(0,l.jsx)(n.code,{children:"album_genre"})," => ",(0,l.jsx)(n.code,{children:"genre"})," for album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Alias ",(0,l.jsx)(n.code,{children:"mbid_album"})," => ",(0,l.jsx)(n.code,{children:"mbid"})," for album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Alias ",(0,l.jsx)(n.code,{children:"mbid_artist"})," => ",(0,l.jsx)(n.code,{children:"mbid"})," for artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Alias ",(0,l.jsx)(n.code,{children:"song_genre"})," => ",(0,l.jsx)(n.code,{children:"genre"})," for song search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-9",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Renamed ",(0,l.jsx)(n.code,{children:"user_update"})," to ",(0,l.jsx)(n.code,{children:"user_edit"})," (user_update still works and will be depreciated in API7)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add backwards compatible ",(0,l.jsx)(n.code,{children:"user_edit"})," method to point to ",(0,l.jsx)(n.code,{children:"user_update"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add all possible plugin preferences to the system list so they can't be deleted"}),"\n",(0,l.jsx)(n.li,{children:"Albums with no album_artist may now return 0 artist called 'Various'"}),"\n",(0,l.jsx)(n.li,{children:"Don't send AlbumDisk objects to the API"}),"\n",(0,l.jsx)(n.li,{children:"Send the authenticated user to all method calls"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["XML responses","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api6 XML success and error response messages are put in a ",(0,l.jsx)(n.code,{children:"message"})," element (like json)"]}),"\n",(0,l.jsx)(n.li,{children:"For data responses id is the only attribute and everything else is an element"}),"\n",(0,l.jsx)(n.li,{children:"Name was not set as an attribute OR an element so now it's always an element"}),"\n",(0,l.jsx)(n.li,{children:"Return original XML output (that may be malformed) when loadxml fails."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api6::get_indexes: This method is depreciated and will be removed in ",(0,l.jsx)(n.strong,{children:"API7"})," (Use list instead)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"removed",children:"Removed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"preciserating"})," removed from all objects (use rating)"]}),"\n",(0,l.jsx)(n.li,{children:"Remove non-song MBIDs as not relevant to the object"}),"\n",(0,l.jsxs)(n.li,{children:["album_songs remove ",(0,l.jsx)(n.code,{children:"exact"})," as a parameter"]}),"\n",(0,l.jsxs)(n.li,{children:["stream remove ",(0,l.jsx)(n.code,{children:"podcast"})," as a valid ",(0,l.jsx)(n.code,{children:"type"})," value"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"preference_create: don't allow creating 'system' preferences"}),"\n",(0,l.jsxs)(n.li,{children:["Warning of depreciated methods from API5 have been removed from API6","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api6::tag"}),"\n",(0,l.jsx)(n.li,{children:"Api6::tags"}),"\n",(0,l.jsx)(n.li,{children:"Api6::tag_albums"}),"\n",(0,l.jsx)(n.li,{children:"Api6::tag_artists"}),"\n",(0,l.jsx)(n.li,{children:"Api6::tag_songs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-10",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"advanced_search methods were breaking with various offset and limits"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api6 JSON","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Share and Bookmark object id's were not strings"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Never send 0 ratings. They should always be null (e.g. ",(0,l.jsx)(n.code,{children:"<rating/>"}),")"]}),"\n",(0,l.jsx)(n.li,{children:"Artists method parameters were incorrect"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-564",children:"API 5.6.4"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-11",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fixed Bearer token auth on all methods"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix lots of Runtime Error's on missing optional data"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix lots of Runtime Error's on missing optional data"}),"\n",(0,l.jsxs)(n.li,{children:["genre_artists, genre_albums, genre_songs: Parameter ",(0,l.jsx)(n.code,{children:"filter"})," runtime errors"]}),"\n",(0,l.jsx)(n.li,{children:"bookmark_edit, bookmark_create: Missing user in the object data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-563",children:"API 5.6.3"}),"\n",(0,l.jsx)(n.h3,{id:"added-12",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API5::playlist_songs: Add ",(0,l.jsx)(n.code,{children:"random"})," to get random objects filtered by limit"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-12",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"handshake: runtime errors with bad username"}),"\n",(0,l.jsx)(n.li,{children:"handshake: Don't error on empty data counts"}),"\n",(0,l.jsx)(n.li,{children:"ping: Don't error on empty data counts"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["share_create: null ",(0,l.jsx)(n.code,{children:"expires"})," fall back to ",(0,l.jsx)(n.code,{children:"share_expire"})," or 7 days"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["share_create: null ",(0,l.jsx)(n.code,{children:"expires"})," fall back to ",(0,l.jsx)(n.code,{children:"share_expire"})," or 7 days"]}),"\n",(0,l.jsx)(n.li,{children:"preference_edit: Could apply to the wrong user"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-562",children:"API 5.6.2"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-13",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Require and set a valid version for ",(0,l.jsx)(n.code,{children:"api_force_version"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-561",children:"API 5.6.1"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-560",children:"API 5.6.0"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-14",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ALL","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"share_create and share_edit methods broken when setting expiry days"}),"\n",(0,l.jsx)(n.li,{children:"advanced_search methods were breaking with various offset and limits"}),"\n",(0,l.jsx)(n.li,{children:"playlists methods parameter 'exact' always ending up false"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"update_art hardcoded url to artist"}),"\n",(0,l.jsx)(n.li,{children:"Typo in song bitrate xml"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-556",children:"API 5.5.6"}),"\n",(0,l.jsx)(n.p,{children:"Fix various runtime errors and incorrect parameters for responses."}),"\n",(0,l.jsx)(n.h3,{id:"changed-10",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API browses all point to the Api class"}),"\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"FILTER_VALIDATE_IP"})," on ping calls"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-15",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"songs"})," set_filter call without browse parameter may have lost info"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"get_indexes"})," set album_artist filter correctly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"artists"})," set album_artist filter correctly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"share_create"})," undefined filter check"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"songs"})," set_filter call without browse parameter may have lost info"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"get_indexes"})," set album_artist filter correctly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"timeline"})," incorrect JSON attribute ",(0,l.jsx)(n.code,{children:"data"})," instead of ",(0,l.jsx)(n.code,{children:"date"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"catalogs"})," JSON had incorrect data for ",(0,l.jsx)(n.code,{children:"last_add"})," and missing ",(0,l.jsx)(n.code,{children:"enabled"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"albums"})," return an empty response with a bad artist id"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"download"}),' url parameter order matching "client, action, cache"']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"catalogs"})," undefined filter check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"podcast"})," undefined filter check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"podcast_edit"})," undefined filter check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"podcasts"})," undefined filter check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"share_create"})," undefined filter check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"share_edit"})," undefined filter check"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"album_songs"})," return an empty response with a bad album id"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"artist_albums"})," return an empty response with a bad artist id"]}),"\n",(0,l.jsxs)(n.li,{children:["Calls to ",(0,l.jsx)(n.code,{children:"songs"})," with user ID instead of user object"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-554",children:"API 5.5.4"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-16",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"User count in Api::ping and Api::handshake was doubled"}),"\n",(0,l.jsx)(n.li,{children:"Api3::stats method had incorrect recent parameters"}),"\n",(0,l.jsxs)(n.li,{children:["Ensure the output ",(0,l.jsx)(n.code,{children:"bitrate"})," and ",(0,l.jsx)(n.code,{children:"mime"})," are set for song objects"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-553",children:"API 5.5.3"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-552",children:"API 5.5.2"}),"\n",(0,l.jsx)(n.h3,{id:"added-13",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_artist"})," as a search type (uses artist rules)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"album_artist"})," as a search type (uses artist rules)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_genre"}),", ",(0,l.jsx)(n.code,{children:"mbid_artist"}),", ",(0,l.jsx)(n.code,{children:"mbid_song"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_genre"}),", ",(0,l.jsx)(n.code,{children:"mbid_album"}),", ",(0,l.jsx)(n.code,{children:"mbid_song"})," to artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"possible_duplicate_album"})," to song search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-17",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"unable to retrieve song_artist or album_artist results"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-551",children:"API 5.5.1"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-550",children:"API 5.5.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-14",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api::stream add new types ",(0,l.jsx)(n.code,{children:"playlist"})," and ",(0,l.jsx)(n.code,{children:"search"})," (Streams a random object from these lists)"]}),"\n",(0,l.jsxs)(n.li,{children:["Api::download add new types ",(0,l.jsx)(n.code,{children:"playlist"})," and ",(0,l.jsx)(n.code,{children:"search"})]}),"\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"podcast"})," as a search type","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"title"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"podcast_episode"})," (Search by podcast episode name)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"time"})," (Episode length in minutes)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"state"})," (Completed, Pending Skipped)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"file"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"added"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"pubdate"})," (Episode Publication Date)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"podcast_episode"})," as a search type","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"title"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"podcast"})," (Search by podcast name)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"time"})," (Length in minutes)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"state"})," (Completed, Pending Skipped)"]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"file"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"added"})]}),"\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"pubdate"})," (Publication Date)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"genre"})," as a search type","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add rule ",(0,l.jsx)(n.code,{children:"title"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-18",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API4::get_indexes podcast_episode was encoding into the API5 object"}),"\n",(0,l.jsx)(n.li,{children:"API4::share_create was unable to share when using lowercase types"}),"\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Added missing ",(0,l.jsx)(n.code,{children:"song"})," (was ",(0,l.jsx)(n.code,{children:"song_title"}),") to album searches"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api--541",children:"API  5.4.1"}),"\n",(0,l.jsx)(n.h3,{id:"added-15",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Include ",(0,l.jsx)(n.code,{children:"lyrics"})," in Song objects"]}),"\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"file"})," to album and artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"track"})," to song search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"summary"})," to artist search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-540",children:"API 5.4.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-16",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"file"})," to album and artist search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-533",children:"API 5.3.3"}),"\n",(0,l.jsx)(n.h3,{id:"added-17",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_title"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"album_title"})," and ",(0,l.jsx)(n.code,{children:"song_title"})," to artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"orphaned_album"})," to song search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-532",children:"API 5.3.2"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-531",children:"API 5.3.1"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-530",children:"API 5.3.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-18",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["advanced_search:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"songrating"})," to album search (My Rating (Song))"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"songrating"})," (My Rating (Song)) and ",(0,l.jsx)(n.code,{children:"albumrating"})," (My Rating (Album)) to artist search"]}),"\n",(0,l.jsx)(n.li,{children:"Allow empty/null searches for all mbid searches"}),"\n",(0,l.jsx)(n.li,{children:"Allow empty/null searches for label searches"}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_count"})," to album and artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"album_count"})," to artist search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"myplayedartist"})," (Played by Me (Artist)) to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"song_artist"})," to album search"]}),"\n",(0,l.jsxs)(n.li,{children:["Add alias ",(0,l.jsx)(n.code,{children:"album_artist"})," to album search for ",(0,l.jsx)(n.code,{children:"artist"})," searches"]}),"\n",(0,l.jsxs)(n.li,{children:["Add ",(0,l.jsx)(n.code,{children:"recent_added"})," to album search"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-521",children:"API 5.2.1"}),"\n",(0,l.jsx)(n.h3,{id:"changed-11",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Return the xml total_count of playlists based on hide_search preference"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-19",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"update_from_tags: type case error"}),"\n",(0,l.jsx)(n.li,{children:"rate: Object type to class mapping"}),"\n",(0,l.jsx)(n.li,{children:"flag: Object type to class mapping"}),"\n",(0,l.jsx)(n.li,{children:"update_art: Object type to class mapping and type case check"}),"\n",(0,l.jsx)(n.li,{children:"update_from_tags: Object type to class mapping"}),"\n",(0,l.jsx)(n.li,{children:"genre and tag function compatibility"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"stats: incorrect getRandom call"}),"\n",(0,l.jsx)(n.li,{children:"rate: Object type to class mapping"}),"\n",(0,l.jsx)(n.li,{children:"playlist: bad escaping on the playlist id"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-520",children:"API 5.2.0"}),"\n",(0,l.jsxs)(n.p,{children:["Check out the docs for multi API support at ",(0,l.jsx)(n.a,{href:"https://ampache.org/api/",children:"ampache.org"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"note"})," JSON didn't exist for API3 so all json requests from API3 calls will revert to API5"]}),"\n",(0,l.jsx)(n.h3,{id:"added-19",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Support for API3, API4 and API5 responses including PHP8 support (keeps original tag calls)"}),"\n",(0,l.jsxs)(n.li,{children:["API5","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlists: sql for searches wasn't filtering"}),"\n",(0,l.jsx)(n.li,{children:"playlists: add parameter 'show_dupes' if true ignore 'api_hide_dupe_searches' setting"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API4","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"playlists: add parameter 'show_dupes' if true ignore 'api_hide_dupe_searches' setting"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["API3","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added genre calls as an alias to tag functions to match API4 and API5"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-511",children:"API 5.1.1"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-20",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Access to podcast_episode_delete"}),"\n",(0,l.jsx)(n.li,{children:"stats calls with an offest and limit"}),"\n",(0,l.jsx)(n.li,{children:"advanced_search calls with an offset and limit"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-510",children:"API 5.1.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-20",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["NEW API functions","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::live_stream (get a radio stream by id)"}),"\n",(0,l.jsx)(n.li,{children:"Api::live_streams"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Api::stream Added type 'podcast_episode' ('podcast' to be removed in Ampache 6.0.0)"}),"\n",(0,l.jsx)(n.li,{children:"Add 'time' and 'size' to all podcast_episode responses"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-12",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"live_stream objects added 'catalog' and 'site_url'"}),"\n",(0,l.jsx)(n.li,{children:"stats: additional type values: 'video', 'playlist', 'podcast', 'podcast_episode'"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-21",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_indexes: JSON didn't think live_streams was valid (it is)"}),"\n",(0,l.jsx)(n.li,{children:"record_play: user is optional"}),"\n",(0,l.jsx)(n.li,{children:"Bad xml tags in deleted functions"}),"\n",(0,l.jsx)(n.li,{children:"scrobble: Add song_mbid, artist_mbid, album_mbid (docs have no '_' so support both)"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-500",children:"API 5.0.0"}),"\n",(0,l.jsx)(n.p,{children:"All API code that used 'Tag' now references 'Genre' instead"}),"\n",(0,l.jsx)(n.p,{children:'This version of the API is the first semantic version. "5.0.0"'}),"\n",(0,l.jsx)(n.h3,{id:"added-21",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add global playcount to podcast_episode and video responses"}),"\n",(0,l.jsx)(n.li,{children:"searches (the number of saved smartlists) added to the handshake/ping response"}),"\n",(0,l.jsxs)(n.li,{children:["NEW API functions","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::song_delete (Delete files when you are allowed to)"}),"\n",(0,l.jsx)(n.li,{children:"Api::user_preferences (Get your user preferences)"}),"\n",(0,l.jsx)(n.li,{children:"Api::user_preference (Get your preference by name)"}),"\n",(0,l.jsx)(n.li,{children:"Api::system_update (Check Ampache for updates and run the update if there is one.)"}),"\n",(0,l.jsx)(n.li,{children:"Api::system_preferences (Preferences for the system user)"}),"\n",(0,l.jsx)(n.li,{children:"Api::system_preference (Get a system preference by name)"}),"\n",(0,l.jsx)(n.li,{children:"Api::preference_create (Add a new preference to Ampache)"}),"\n",(0,l.jsx)(n.li,{children:"Api::preference_edit (Edit a preference value by name; optionally apply to all users)"}),"\n",(0,l.jsx)(n.li,{children:"Api::preference_delete (Delete a preference by name)"}),"\n",(0,l.jsx)(n.li,{children:"Api::labels (list your record labels)"}),"\n",(0,l.jsx)(n.li,{children:"Api::label (get a label by id)"}),"\n",(0,l.jsx)(n.li,{children:"Api::label_artists (get all artists attached to that label)"}),"\n",(0,l.jsx)(n.li,{children:"Api::get_bookmark (See if you've previously played the file)"}),"\n",(0,l.jsx)(n.li,{children:"Api::bookmarks (List all bookmarks created by your account)"}),"\n",(0,l.jsx)(n.li,{children:"Api::bookmark_create (Create a bookmark to allow revisting later)"}),"\n",(0,l.jsx)(n.li,{children:"Api::bookmark_edit (Edit a bookmark)"}),"\n",(0,l.jsx)(n.li,{children:"Api::bookmark_delete (Delete a bookmark by object id, type, user and client name)"}),"\n",(0,l.jsx)(n.li,{children:"Api::localplay_songs (Get the list of songs in your localplay instance)"}),"\n",(0,l.jsx)(n.li,{children:"API::deleted_songs"}),"\n",(0,l.jsx)(n.li,{children:"API::deleted_podcast_episodes"}),"\n",(0,l.jsx)(n.li,{children:"API::deleted_videos"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-13",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The API version matches release version '5.0.0'"}),"\n",(0,l.jsx)(n.li,{children:"A backcompatible version (500000) is sent when using old api versions"}),"\n",(0,l.jsxs)(n.li,{children:["handshake and ping counts now return the actual object counts for playlists","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"'playlists' => $counts['playlist'],"}),"\n",(0,l.jsx)(n.li,{children:"'searches' => $counts['search'],"}),"\n",(0,l.jsx)(n.li,{children:"'playlists_searches' => $counts['playlist'] + $counts['search']"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Renamed functions:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"tags => genres"}),"\n",(0,l.jsx)(n.li,{children:"tag => genre"}),"\n",(0,l.jsx)(n.li,{children:"tag_artists => genre_artists"}),"\n",(0,l.jsx)(n.li,{children:"tag_albums => genre_albums"}),"\n",(0,l.jsx)(n.li,{children:"tag_songs => genre_songs"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Don't allow duplicate podcast feeds"}),"\n",(0,l.jsx)(n.li,{children:"Make filter optional in shares, genre_artists, genre_albums, genre_songs (Used as a general catch all method like genres)"}),"\n",(0,l.jsxs)(n.li,{children:["Error Codes and response structure has changed","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"4700 Access Control not Enabled"}),"\n",(0,l.jsx)(n.li,{children:"4701 Received Invalid Handshake"}),"\n",(0,l.jsx)(n.li,{children:"4703 Access Denied"}),"\n",(0,l.jsx)(n.li,{children:"4704 Not Found"}),"\n",(0,l.jsx)(n.li,{children:"4705 Missing Method"}),"\n",(0,l.jsx)(n.li,{children:"4706 Depreciated Method"}),"\n",(0,l.jsx)(n.li,{children:"4710 Bad Request"}),"\n",(0,l.jsx)(n.li,{children:"4742 Failed Access Check"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"stats: Removed back compat from older versions. Only 'type' is mandatory"}),"\n",(0,l.jsx)(n.li,{children:"Return empty objects when the request was correct but the results were empty"}),"\n",(0,l.jsx)(n.li,{children:"Don't transcode podcast_episodes"}),"\n",(0,l.jsxs)(n.li,{children:["localplay","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"added 'track' parameter used by 'skip' commands to go to the playlist track (playlist starts at 1)"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"system_update: update the database if required as well"}),"\n",(0,l.jsx)(n.li,{children:"playlist_edit: added 'owner' as an optional parameter (Change playlist owner to the user id)"}),"\n",(0,l.jsx)(n.li,{children:"catalog_file: Allow comma-separate task values. (good for API inotify scripts)"}),"\n",(0,l.jsx)(n.li,{children:'podcast_episode object "pubdate" has been changed to ISO 8601 date (2004-02-12T15:19:21+00:00)'}),"\n",(0,l.jsx)(n.li,{children:'podcast object "build_date" and "sync_date" have also been changed to ISO 8601 date'}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-22",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"catalog_file: Couldn't add files"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-442",children:"API 4.4.2"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-23",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API::indexes Artist albums were being added incorrectly for XML"}),"\n",(0,l.jsx)(n.li,{children:"Send back the full album name in responses"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-441",children:"API 4.4.1"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-24",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"API::stats would not offset recent calls"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-440",children:"API 4.4.0"}),"\n",(0,l.jsx)(n.h3,{id:"added-22",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["NEW API functions","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::users (ID and Username of the site users)"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Api::localplay added new options to 'command' ('pause', 'add', 'volume_up', 'volume_down', 'volume_mute', 'delete_all', 'skip')"}),"\n",(0,l.jsxs)(n.li,{children:["Api::localplay added parameters:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"'oid' (integer) object_id to add //optional"}),"\n",(0,l.jsx)(n.li,{children:"'type' (string) Default: 'Song' ('Song', 'Video', 'Podcast_Episode', 'Channel', 'Broadcast', 'Democratic', 'Live_Stream') //optional"}),"\n",(0,l.jsx)(n.li,{children:"'clear' (integer) 0|1 clear the current playlist on add //optional"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Api::playlist_edit added new parameter 'sort': (0,1) sort the playlist by 'Artist, Album, Song' //optional"}),"\n",(0,l.jsxs)(n.li,{children:["Api::get_indexes","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New type options: 'album_artist', 'podcast', 'podcast_episode', 'share', 'video'"}),"\n",(0,l.jsx)(n.li,{children:"Added parameter 'include': (0,1) (add the extra songs details if a playlist or podcast_episodes if a podcast)"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Api::rate - Added types 'playlist', 'podcast', 'podcast_episode', 'video', 'tvshow', 'tvshow_season'"}),"\n",(0,l.jsx)(n.li,{children:"Api::flag - Added types 'podcast', 'podcast_episode', 'video', 'tvshow', 'tvshow_season'"}),"\n",(0,l.jsx)(n.li,{children:"Add time to artist and album objects. (total time of all songs in seconds)"}),"\n",(0,l.jsx)(n.li,{children:"Add songcount, albumcount to artist objects. (time in seconds)"}),"\n",(0,l.jsx)(n.li,{children:"Add songcount to album objects. (time in seconds)"}),"\n",(0,l.jsx)(n.li,{children:"Add type (release_type) to album objects"}),"\n",(0,l.jsx)(n.li,{children:"Add disk to song objects"}),"\n",(0,l.jsx)(n.li,{children:"Add time to video objects. (time in seconds)"}),"\n",(0,l.jsx)(n.li,{children:"Add title, mime, catalog to podcast_episodes"}),"\n",(0,l.jsx)(n.li,{children:"Api::advanced_search Add 'playlist', 'user' and 'video' to search types"}),"\n",(0,l.jsxs)(n.li,{children:["Api::handshake added extra total counts to the response","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"users, tags, podcasts, podcast_episodes, shares, licenses, live_streams, labels"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Api::ping match the handshake response (excluding the auth token)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-14",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_indexes: 'playlist' now requires include=1 for xml calls if you want the tracks"}),"\n",(0,l.jsx)(n.li,{children:"Make filter optional in shares"}),"\n",(0,l.jsxs)(n.li,{children:["Api::podcast_episodes","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'"url" is now a play url (instead of a link to the episode)'}),"\n",(0,l.jsx)(n.li,{children:'"public_url" is now the old episode link'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-25",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::podcast_edit wasn't able to edit a podcast..."}),"\n",(0,l.jsx)(n.li,{children:"Api::democratic was using action from localplay in the return responses"}),"\n",(0,l.jsx)(n.li,{children:"get_indexes for XML didn't include podcast indexes"}),"\n",(0,l.jsx)(n.li,{children:"Set OUTDATED_DATABASE_OK on image.php, play/index.php and share.php to stop blocking requests"}),"\n",(0,l.jsx)(n.li,{children:"Don't limit sub items when using a limit (e.g return all podcast episodes when selecting a podcast)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"deprecated",children:"Deprecated"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Dropped in API 5.0.0","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::get_indexes; stop including playlist track and id in xml by default"}),"\n",(0,l.jsx)(n.li,{children:'Album objects: "tracks" will only include track details. Use "songcount"'}),"\n",(0,l.jsx)(n.li,{children:'Artist objects: "albums", "songs" will only include track details Use "albumcount" and "songcount"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-430",children:"API 4.3.0"}),"\n",(0,l.jsx)(n.h3,{id:"changed-15",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Api::record_play","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Make 'user' parameter optional"}),"\n",(0,l.jsxs)(n.li,{children:["Allow 'user' to the be user_id ",(0,l.jsx)(n.strong,{children:"or"})," the username string"]}),"\n",(0,l.jsx)(n.li,{children:"Add 'date' parameter (optional)"}),"\n",(0,l.jsx)(n.li,{children:"Require 100 (Admin) permission to record plays for other users"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api::get_indexes","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add 'hide_search' parameter (optional)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Api::playlists","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add 'hide_search' parameter (optional)"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Setting a limit of 'none' would slice away all the results"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-426",children:"API 4.2.6"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-425",children:"API 4.2.5"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-424",children:"API 4.2.4"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-423",children:"API 4.2.3"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"NO CHANGE"})}),"\n",(0,l.jsx)(n.h2,{id:"api-422",children:"API 4.2.2"}),"\n",(0,l.jsx)(n.p,{children:"Minor bugfixes"}),"\n",(0,l.jsx)(n.h3,{id:"added-23",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::advanced_search added parameter 'random' (0|1) to shuffle your searches"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-16",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Remove spaces from advanced_search rule names. (Backwards compatible with old names)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"'has image' => 'has_image'"}),"\n",(0,l.jsx)(n.li,{children:"'image height' => 'image_height'"}),"\n",(0,l.jsx)(n.li,{children:"'image width' => 'image_width'"}),"\n",(0,l.jsx)(n.li,{children:"'filename' => 'file' (Video search)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Search rules 'has image', 'image height', 'image width', 'filename'. (Removed in Ampache 5.0.0)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-26",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::stream, Api::download Api::playlist_generate 'format' parameter was overwritten with 'xml' or 'json'"}),"\n",(0,l.jsx)(n.li,{children:"Produce valid XML for playlist_generate using the 'id' format in XML"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-421",children:"API 4.2.1"}),"\n",(0,l.jsx)(n.p,{children:"No functional changes from 4.2.0"}),"\n",(0,l.jsx)(n.h3,{id:"fixed-27",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Filter in "playlist" and "playlist_songs" fixed'}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-420",children:"API 4.2.0"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"API versions will follow release version and no longer use builds in the integer versions (e.g. 420000)"}),"\nAPI 5.0.0-release will be the first Ampache release to match the release string."]}),"\n",(0,l.jsx)(n.h3,{id:"added-24",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["JSON API now available!","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Call xml as normal: ",(0,l.jsx)(n.code,{children:"http://music.com.au/server/xml.server.php?action=handshake&auth=APIKEY&version=420000"})]}),"\n",(0,l.jsxs)(n.li,{children:["Call the JSON server: ",(0,l.jsx)(n.code,{children:"http://music.com.au/server/json.server.php?action=handshake&auth=APIKEY&version=420000"})]}),"\n",(0,l.jsxs)(n.li,{children:["Example XML and JSON responses available ",(0,l.jsx)(n.a,{href:"https://github.com/ampache/python3-ampache/tree/master/docs",children:"here"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["NEW API functions","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get_similar: send artist or song id to get related objects from last.fm"}),"\n",(0,l.jsx)(n.li,{children:"shares: get a list of shares you can access"}),"\n",(0,l.jsx)(n.li,{children:"share: get a share by id"}),"\n",(0,l.jsx)(n.li,{children:"share_create: create a share"}),"\n",(0,l.jsx)(n.li,{children:"share_edit: edit an existing share"}),"\n",(0,l.jsx)(n.li,{children:"share_delete: delete an existing share"}),"\n",(0,l.jsx)(n.li,{children:"podcasts: get a list of podcasts you can access"}),"\n",(0,l.jsx)(n.li,{children:"podcast: get a podcast by id"}),"\n",(0,l.jsx)(n.li,{children:"podcast_episodes: get a list of podcast_episodes you can access"}),"\n",(0,l.jsx)(n.li,{children:"podcast_episode: get a podcast_episode by id"}),"\n",(0,l.jsx)(n.li,{children:"podcast_episode_delete: delete an existing podcast_episode"}),"\n",(0,l.jsx)(n.li,{children:"podcast_create: create a podcast"}),"\n",(0,l.jsx)(n.li,{children:"podcast_edit: edit an existing podcast"}),"\n",(0,l.jsx)(n.li,{children:"podcast_delete: delete an existing podcast"}),"\n",(0,l.jsx)(n.li,{children:"update_podcast: sync and download new episodes"}),"\n",(0,l.jsx)(n.li,{children:"licenses: get a list of licenses you can access"}),"\n",(0,l.jsx)(n.li,{children:"license: get a license by id"}),"\n",(0,l.jsx)(n.li,{children:"catalogs: get all the catalogs"}),"\n",(0,l.jsx)(n.li,{children:"catalog: get a catalog by id"}),"\n",(0,l.jsx)(n.li,{children:"catalog_file: clean, add, verify using the file path (good for scripting)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-17",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Bump API version to 420000 (4.2.0)"}),"\n",(0,l.jsxs)(n.li,{children:["All calls that return songs now include ",(0,l.jsx)(n.code,{children:"<playlisttrack>"})," which can be used to identify track order."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<playcount>"})," added to objects with a playcount."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<license>"})," added to song objects."]}),"\n",(0,l.jsx)(n.li,{children:"Don't gather art when adding songs"}),"\n",(0,l.jsx)(n.li,{children:"Added actions to catalog_action. 'verify_catalog' 'gather_art'"}),"\n",(0,l.jsxs)(n.li,{children:['API function "playlist_edit": added ability to edit playlist items',"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"items  = (string) comma-separated song_id's (replace existing items with a new object_id) //optional"}),"\n",(0,l.jsx)(n.li,{children:"tracks = (string) comma-separated playlisttrack numbers matched to items in order //optional"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Random albums will get songs for all disks if album_group enabled"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"deprecated-2",children:"Deprecated"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["API Build number is depreciated (the last 3 digits of the api version)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'API 5.0.0 will be released with a string version ("5.0.0-release")'}),"\n",(0,l.jsx)(n.li,{children:"All future 4.x.x API versions will follow the main Ampache version. (420000, 421000, 422000)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:"total_count in the XML API is depreciated and will be removed in API 5.0.0."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["XML can count objects the same was as a JSON array [",(0,l.jsx)(n.a,{href:"https://www.php.net/manual/en/simplexmlelement.count.php",children:"https://www.php.net/manual/en/simplexmlelement.count.php"}),"]"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:"Genre in songs is depreciated and will be removed in API 5.0.0."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use tag instead of genre, tag provides a genre ID as well as the name."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-28",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Extra text in catalog API calls"}),"\n",(0,l.jsx)(n.li,{children:"Don't fail the API calls when the database needs updating"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-400-build-004",children:"API 4.0.0 build 004"}),"\n",(0,l.jsx)(n.p,{children:"Bump API version to 400004 (4.0.0 build 004)"}),"\n",(0,l.jsx)(n.h3,{id:"added-25",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add Api::check_access to warn when you can't access a function"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-29",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix parameters using 0"}),"\n",(0,l.jsx)(n.li,{children:"Get the correct total_count in xml when you set a limit"}),"\n",(0,l.jsx)(n.li,{children:"Fix many XML formatting issues"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-400-build-003",children:"API 4.0.0 build 003"}),"\n",(0,l.jsx)(n.p,{children:"Bump API version to 400003 (4.0.0 build 003)"}),"\n",(0,l.jsx)(n.h3,{id:"added-26",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["user_numeric searches also available in the API. ([",(0,l.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods",children:"https://ampache.org/api/api-xml-methods"}),"])"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-18",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Api::playlist - filter mandatory"}),"\n",(0,l.jsx)(n.li,{children:"Api::playlist_edit - filter mandatory. name and type now optional"}),"\n",(0,l.jsx)(n.li,{children:"Api::user - Extend return values to include more user fields"}),"\n",(0,l.jsx)(n.li,{children:"Playlist::create - Return duplicate playlist ID instead of creating a new one"}),"\n",(0,l.jsx)(n.li,{children:"Do not limit smartlists based on item count (return everything you can access)"}),"\n",(0,l.jsx)(n.li,{children:"Api/Database - Add last_count for search table to speed up access in API"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"removed-1",children:"Removed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Artist::check - Remove MBID from Various Artist objects"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fixed-30",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Fix Song::update_song for label"}),"\n",(0,l.jsx)(n.li,{children:"Fix Api issues relating to playlist access"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-400-build-001",children:"API 4.0.0 build 001"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Bump API version to 400002 (4.0.0 build 001)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"added-27",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Documented the Ampache API [",(0,l.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods",children:"https://ampache.org/api/api-xml-methods"}),"]"]}),"\n",(0,l.jsx)(n.li,{children:"Include smartlists in the API playlist calls."}),"\n",(0,l.jsxs)(n.li,{children:["Authentication: allow sha256 encrypted apikey for auth","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"You must send an encrypted api key in the following fashion. (Hash key joined with username)"}),"\n",(0,l.jsx)(n.li,{children:"$passphrase = hash('sha256', $username . hash('sha256', $apikey));"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Added artist_tag to song searches"}),"\n",(0,l.jsx)(n.li,{children:"flag: allows flagging object by id & type"}),"\n",(0,l.jsx)(n.li,{children:"record_play: allows recording play of object without streaming"}),"\n",(0,l.jsx)(n.li,{children:"catalog_action: allow running add_to_catalog|clean_catalog"}),"\n",(0,l.jsx)(n.li,{children:"playlist_edit: allow editing name and type of playlist"}),"\n",(0,l.jsx)(n.li,{children:"goodbye: Destroy session"}),"\n",(0,l.jsx)(n.li,{children:"get_indexes: return simple index lists to allow a quicker library fill."}),"\n",(0,l.jsx)(n.li,{children:"check_parameter: error when mandatory inputs are missing"}),"\n",(0,l.jsx)(n.li,{children:"stream: Raw stream of song_id"}),"\n",(0,l.jsx)(n.li,{children:"download: Download, not recorded as a play"}),"\n",(0,l.jsx)(n.li,{children:"get_art: Raw art file like subsonic getCoverArt"}),"\n",(0,l.jsx)(n.li,{children:"user_create: 'user' access level only!"}),"\n",(0,l.jsx)(n.li,{children:"user_update: update user details and passwords for non-admins"}),"\n",(0,l.jsx)(n.li,{children:"user_delete: you can't delete yourself or and admin account!"}),"\n",(0,l.jsx)(n.li,{children:"update_from_tags: updates a single album, artist, song from the tag data instead of the entire library!"}),"\n",(0,l.jsx)(n.li,{children:"update_art: updates a single album, artist, song running the gather_art process"}),"\n",(0,l.jsx)(n.li,{children:"update_artist_info: Update artist information and fetch similar artists from last.fm"}),"\n",(0,l.jsx)(n.li,{children:"playlist_generate: Get a list of song xml, indexes or id's based on some simple search criteria. care of @4phun"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"changed-19",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Authentication: Require a handshake and generate unique sessions at all times"}),"\n",(0,l.jsxs)(n.li,{children:["advanced_search","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"'is not' has been added shifting values down the list.\n(0=contains, 1=does not contain, 2=starts with, 3=ends with, 4=is, 5=is not, 6=sounds like, 7=does not sound like)"}),"\n",(0,l.jsx)(n.li,{children:"rule_1['name'] is depreciated. Instead of multiple searches for the same thing rule_1'name'\nhas been replaced with 'title' (I have put a temp workaround into the search rules to alleviate this change)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["stats","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"allow songs|artists|albums (instead of just albums)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["playlists","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"allow return of smartlists as well as regular playlists (set a 5000 limit on unlimited smartlists)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["playlist_add_song","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added check boolean to skip duplicate songs"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["playlist_remove_song","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Allow uid of song instead of the track id from the playlist"}),"\n"]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,d.RP)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{RP:()=>d,xA:()=>a});var s=i(6540);const l=s.createContext({});function d(e){const n=s.useContext(l);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function a({components:e,children:n,disableParentContext:i}){let a;return a=i?"function"==typeof e?e({}):e||r:d(e),s.createElement(l.Provider,{value:a},n)}}}]);