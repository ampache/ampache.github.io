"use strict";(self.webpackChunkampache_org_api=self.webpackChunkampache_org_api||[]).push([[8017],{3905:(t,a,e)=>{e.d(a,{Zo:()=>d,kt:()=>s});var n=e(7294);function r(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){r(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function p(t,a){if(null==t)return{};var e,n,r=function(t,a){if(null==t)return{};var e,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||(r[e]=t[e]);return r}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var m=n.createContext({}),u=function(t){var a=n.useContext(m),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},d=function(t){var a=u(t.components);return n.createElement(m.Provider,{value:a},t.children)},k={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(t,a){var e=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),g=u(e),s=r,N=g["".concat(m,".").concat(s)]||g[s]||k[s]||l;return e?n.createElement(N,i(i({ref:a},d),{},{components:e})):n.createElement(N,i({ref:a},d))}));function s(t,a){var e=arguments,r=a&&a.mdxType;if("string"==typeof t||r){var l=e.length,i=new Array(l);i[0]=g;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var u=2;u<l;u++)i[u]=e[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}g.displayName="MDXCreateElement"},5363:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=e(7462),r=(e(7294),e(3905));const l={title:"XML 4.1",metaTitle:"XML 4.1",description:"API documentation"},i=void 0,p={unversionedId:"versions/api-4.1/xml-methods",id:"versions/api-4.1/xml-methods",title:"XML 4.1",description:"API documentation",source:"@site/docs/versions/api-4.1/xml-methods.md",sourceDirName:"versions/api-4.1",slug:"/versions/api-4.1/xml-methods",permalink:"/api/versions/api-4.1/xml-methods",draft:!1,tags:[],version:"current",frontMatter:{title:"XML 4.1",metaTitle:"XML 4.1",description:"API documentation"},sidebar:"api",previous:{title:"API 4.1",permalink:"/api/versions/api-4.1/"},next:{title:"API 4.2",permalink:"/api/versions/api-4.2/"}},m={},u=[{value:"Non-Data Methods",id:"non-data-methods",level:2},{value:"handshake",id:"handshake",level:2},{value:"ping",id:"ping",level:2},{value:"goodbye",id:"goodbye",level:2},{value:"url_to_song",id:"url_to_song",level:2},{value:"Data Methods",id:"data-methods",level:2},{value:"get_indexes",id:"get_indexes",level:2},{value:"advanced_search",id:"advanced_search",level:2},{value:"Changes to text searches for 410001",id:"changes-to-text-searches-for-410001",level:3},{value:"Changes to text searches for 400001",id:"changes-to-text-searches-for-400001",level:3},{value:"Using advanced_search",id:"using-advanced_search",level:3},{value:"Available search rules",id:"available-search-rules",level:4},{value:"Available search operators",id:"available-search-operators",level:4},{value:"Metadata operator table",id:"metadata-operator-table",level:4},{value:"advanced_search parameters",id:"advanced_search-parameters",level:4},{value:"artists",id:"artists",level:2},{value:"artist",id:"artist",level:2},{value:"artist_albums",id:"artist_albums",level:2},{value:"artist_songs",id:"artist_songs",level:2},{value:"albums",id:"albums",level:2},{value:"album",id:"album",level:2},{value:"album_songs",id:"album_songs",level:2},{value:"tags",id:"tags",level:2},{value:"tag",id:"tag",level:2},{value:"tag_artists",id:"tag_artists",level:2},{value:"tag_albums",id:"tag_albums",level:2},{value:"tag_songs",id:"tag_songs",level:2},{value:"songs",id:"songs",level:2},{value:"song",id:"song",level:2},{value:"playlists",id:"playlists",level:2},{value:"playlist",id:"playlist",level:2},{value:"playlist_songs",id:"playlist_songs",level:2},{value:"playlist_create",id:"playlist_create",level:2},{value:"playlist_edit",id:"playlist_edit",level:2},{value:"playlist_delete",id:"playlist_delete",level:2},{value:"playlist_add_song",id:"playlist_add_song",level:2},{value:"playlist_remove_song",id:"playlist_remove_song",level:2},{value:"playlist_generate",id:"playlist_generate",level:2},{value:"search_songs",id:"search_songs",level:2},{value:"videos",id:"videos",level:2},{value:"video",id:"video",level:2},{value:"stats",id:"stats",level:2},{value:"user",id:"user",level:2},{value:"user_create",id:"user_create",level:2},{value:"user_update",id:"user_update",level:2},{value:"user_delete",id:"user_delete",level:2},{value:"followers",id:"followers",level:2},{value:"following",id:"following",level:2},{value:"toggle_follow",id:"toggle_follow",level:2},{value:"last_shouts",id:"last_shouts",level:2},{value:"rate",id:"rate",level:2},{value:"flag",id:"flag",level:2},{value:"record_play",id:"record_play",level:2},{value:"scrobble",id:"scrobble",level:2},{value:"catalog_action",id:"catalog_action",level:2},{value:"timeline",id:"timeline",level:2},{value:"friends_timeline",id:"friends_timeline",level:2},{value:"update_from_tags",id:"update_from_tags",level:2},{value:"update_artist_info",id:"update_artist_info",level:2},{value:"update_art",id:"update_art",level:2},{value:"update_podcast",id:"update_podcast",level:2},{value:"Binary Data Methods",id:"binary-data-methods",level:2},{value:"stream",id:"stream",level:2},{value:"download",id:"download",level:2},{value:"get_art",id:"get_art",level:2},{value:"Control Methods",id:"control-methods",level:2},{value:"localplay",id:"localplay",level:2},{value:"democratic",id:"democratic",level:2}],d={toc:u};function k(t){let{components:a,...e}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,e,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Lets go through come calls and examples that you can do for each XML method."),(0,r.kt)("p",null,"Remember that Binary data methods will not return xml; just the file/data you have requested."),(0,r.kt)("h2",{id:"non-data-methods"},"Non-Data Methods"),(0,r.kt)("h2",{id:"handshake"},"handshake"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This is the function that handles verifying a new handshake Takes a timestamp, auth key, and username."),(0,r.kt)("p",null,"@param array $input\n@return boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$passphrase (Timestamp . Password SHA hash) OR (API Key)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username (Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'timestamp'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME() (Timestamp used in seed of password hash. Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'version'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$version (API Version that the application understands)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/handshake.xml"},"Example")),(0,r.kt)("h2",{id:"ping"},"ping"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This can be called without being authenticated, it is useful for determining if what the status of the server is, and what version it is running/compatible with\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Session ID) returns version information and extends the session if passed"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/ping.xml"},"Example")),(0,r.kt)("h2",{id:"goodbye"},"goodbye"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Destroy a session using the auth parameter."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Session ID) destroys the session if it exists"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/goodbye.xml"},"Example")),(0,r.kt)("h2",{id:"url_to_song"},"url_to_song"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This takes a url and returns the song object in question\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'url'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Full Ampache URL from server, translates back into a song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/url_to_song.xml"},"Example")),(0,r.kt)("h2",{id:"data-methods"},"Data Methods"),(0,r.kt)("h2",{id:"get_indexes"},"get_indexes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"This takes a collection of inputs and returns ID + name for the object type\n@param array $input\n@return boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'album', 'artist', 'playlist'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONGS"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/get_indexes%20(songs).xml"},"Example")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/get_indexes%20(artists).xml"},"Example")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/get_indexes%20(albums).xml"},"Example")),(0,r.kt)("p",null,"PLAYLIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/get_indexes%20(playlists).xml"},"Example")),(0,r.kt)("h2",{id:"advanced_search"},"advanced_search"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=410001")),(0,r.kt)("h3",{id:"changes-to-text-searches-for-410001"},"Changes to text searches for 410001"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Metadata Search is combined with text and numeric. Refer to the Metadata operator table to see the new order after adding regex to text fields.")),(0,r.kt)("h3",{id:"changes-to-text-searches-for-400001"},"Changes to text searches for 400001"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'is not' has been added shifting values down the list.\n0=contains, 1=does not contain, 2=starts with, 3=ends with\n4=is, 5=is not, 6=sounds like, 7=does not sound like"),(0,r.kt)("li",{parentName:"ul"},"rule_1","['name']"," is depreciated. Instead of rule_1","['name']"," use rule_1","['title']"," (I have put a temp workaround into the search rules to alleviate this change for any existing apps)"),(0,r.kt)("li",{parentName:"ul"},"Metadata Search is combined with text and numeric. Meaning that changes to text lists push the numeric fields down.")),(0,r.kt)("h3",{id:"using-advanced_search"},"Using advanced_search"),(0,r.kt)("p",null,"Perform an advanced search given passed rules. This works in a similar way to the web/UI search pages.\nYou can pass multiple rules as well as joins to create in depth search results"),(0,r.kt)("p",null,"Rules must be sent in groups of 3 using an int (starting from 1) to designate which rules are combined.\nUse operator ('and', 'or') to choose whether to join or separate each rule when searching."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rule arrays must contain the following:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"rule name (e.g. rule_1","['title']",", rule_2","['album']",")"),(0,r.kt)("li",{parentName:"ul"},"rule operator (e.g. rule_1_operator","[0]",", rule_2_operator","[3]",")"),(0,r.kt)("li",{parentName:"ul"},"rule input (e.g. rule_1_input","['Prodigy']",", rule_2_input","['Land']",")")))),(0,r.kt)("h4",{id:"available-search-rules"},"Available search rules"),(0,r.kt)("p",null,"Select the type of search based on the type of data you are searching for. (songs, playlists, etc)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"rule_1"),(0,r.kt)("th",{parentName:"tr",align:null},"Title"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Valid Items"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"anywhere"),(0,r.kt)("td",{parentName:"tr",align:null},"Any searchable text"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"title"),(0,r.kt)("td",{parentName:"tr",align:null},"Title / Name"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist,playlist,label")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"favorite"),(0,r.kt)("td",{parentName:"tr",align:null},"Favorites"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song, album, artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"playlist_name"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist Name"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"album"),(0,r.kt)("td",{parentName:"tr",align:null},"Album"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"artist"),(0,r.kt)("td",{parentName:"tr",align:null},"Artist"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"composer"),(0,r.kt)("td",{parentName:"tr",align:null},"Composer"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"Comment"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"label"),(0,r.kt)("td",{parentName:"tr",align:null},"Label"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lyrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Lyrics"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Tag"),(0,r.kt)("td",{parentName:"tr",align:null},"tags"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"album_tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Album tag"),(0,r.kt)("td",{parentName:"tr",align:null},"tags"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"artist_tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Artist tag"),(0,r.kt)("td",{parentName:"tr",align:null},"tags"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filename"),(0,r.kt)("td",{parentName:"tr",align:null},"Filename"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,video")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"placeformed"),(0,r.kt)("td",{parentName:"tr",align:null},"Place"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},"Username"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"year"),(0,r.kt)("td",{parentName:"tr",align:null},"Year"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"time"),(0,r.kt)("td",{parentName:"tr",align:null},"Length (in minutes)"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rating"),(0,r.kt)("td",{parentName:"tr",align:null},"Rating (Average)"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"myrating"),(0,r.kt)("td",{parentName:"tr",align:null},"My Rating"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"artistrating"),(0,r.kt)("td",{parentName:"tr",align:null},"My Rating (Artist)"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"albumrating"),(0,r.kt)("td",{parentName:"tr",align:null},"My Rating (Album)"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"played_times"),(0,r.kt)("td",{parentName:"tr",align:null},"# Played"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bitrate"),(0,r.kt)("td",{parentName:"tr",align:null},"Bitrate"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"has imageght"),(0,r.kt)("td",{parentName:"tr",align:null},"Local Image"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image height"),(0,r.kt)("td",{parentName:"tr",align:null},"Image Height"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image width"),(0,r.kt)("td",{parentName:"tr",align:null},"Image Width"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"yearformed"),(0,r.kt)("td",{parentName:"tr",align:null},"Year"),(0,r.kt)("td",{parentName:"tr",align:null},"numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"played"),(0,r.kt)("td",{parentName:"tr",align:null},"Played"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"myplayed"),(0,r.kt)("td",{parentName:"tr",align:null},"Played by Me"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"myplayedartist"),(0,r.kt)("td",{parentName:"tr",align:null},"Played by Me (Artist)"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"myplayedalbum"),(0,r.kt)("td",{parentName:"tr",align:null},"Played by Me (Album)"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"last_play"),(0,r.kt)("td",{parentName:"tr",align:null},"My Last Play"),(0,r.kt)("td",{parentName:"tr",align:null},"days"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"added"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"updated"),(0,r.kt)("td",{parentName:"tr",align:null},"Updated"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"catalog"),(0,r.kt)("td",{parentName:"tr",align:null},"Catalog"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"other_user"),(0,r.kt)("td",{parentName:"tr",align:null},"Another User"),(0,r.kt)("td",{parentName:"tr",align:null},"user_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song,album,artist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"other_user_album"),(0,r.kt)("td",{parentName:"tr",align:null},"Another User"),(0,r.kt)("td",{parentName:"tr",align:null},"user_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"other_user_artist"),(0,r.kt)("td",{parentName:"tr",align:null},"Another User"),(0,r.kt)("td",{parentName:"tr",align:null},"user_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"playlist"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"licensing"),(0,r.kt)("td",{parentName:"tr",align:null},"Music License"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean_numeric"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"smartplaylist"),(0,r.kt)("td",{parentName:"tr",align:null},"Smart Playlist"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean_subsearch"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"metadata (multiple types)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"song")))),(0,r.kt)("h4",{id:"available-search-operators"},"Available search operators"),(0,r.kt)("p",null,"Select your operator (integer only!) based on the type or your selected search"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"rule_1_operator"),(0,r.kt)("th",{parentName:"tr",align:null},"Text / Tags / Metadata"),(0,r.kt)("th",{parentName:"tr",align:null},"Numeric / user_numeric"),(0,r.kt)("th",{parentName:"tr",align:null},"Date"),(0,r.kt)("th",{parentName:"tr",align:null},"Boolean, Numeric, Subsearch / Days"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"contains"),(0,r.kt)("td",{parentName:"tr",align:null},"is greater than or equal to / has loved"),(0,r.kt)("td",{parentName:"tr",align:null},"before"),(0,r.kt)("td",{parentName:"tr",align:null},"is true / before (x) days ago")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"does not contain"),(0,r.kt)("td",{parentName:"tr",align:null},"is less than or equal to / has rated 5 stars"),(0,r.kt)("td",{parentName:"tr",align:null},"after"),(0,r.kt)("td",{parentName:"tr",align:null},"is false / after (x) days ago")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"starts with"),(0,r.kt)("td",{parentName:"tr",align:null},"equals / has rated 4 stars"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"ends with"),(0,r.kt)("td",{parentName:"tr",align:null},"does not equal / has rated 3 stars"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"is"),(0,r.kt)("td",{parentName:"tr",align:null},"is greater than / has rated 2 stars"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"is not"),(0,r.kt)("td",{parentName:"tr",align:null},"is less than / has rated 1 stars"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"sounds like (Text Only)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"does not sound like (Text Only)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"matches regular expression (Text Only)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"does not match regular expression (Text Only)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"Send the correct input based on the type of search."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"rule_1_input"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE"),' To search metadata you need to add a 4th rule "rule_X_subtype"\nOperators for metadata are using the text/tag types ',(0,r.kt)("strong",{parentName:"p"},"AND")," numeric types in a single list as they can be ints/strings/dates.\nCurrently there is not a simple way to identify what metadata types you have saved. New methods will be created for this."),(0,r.kt)("h4",{id:"metadata-operator-table"},"Metadata operator table"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"rule_1_operator"),(0,r.kt)("th",{parentName:"tr",align:null},"Metadata"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"contains")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"does not contain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"starts with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"ends with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"is not")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"sounds like (Text Only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"does not sound like (Text Only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"matches regular expression (Text Only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"does not match regular expression (Text Only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"is greater than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11"),(0,r.kt)("td",{parentName:"tr",align:null},"is less than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"12"),(0,r.kt)("td",{parentName:"tr",align:null},"is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"13"),(0,r.kt)("td",{parentName:"tr",align:null},"is not")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"14"),(0,r.kt)("td",{parentName:"tr",align:null},"is greater than")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null},"is less than")))),(0,r.kt)("p",null,"To search a mixed type like metadata you must search using 4 rules."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Search rule 1 for band containing 'Prodigy', Search Rule 2 for bbm > 120",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"rule name (e.g. rule_1","['metadata']",", rule_2","['metadata']",")"),(0,r.kt)("li",{parentName:"ul"},"rule operator (e.g. rule_1_operator","[0]",", rule_2_operator","[12]",")"),(0,r.kt)("li",{parentName:"ul"},"rule input (e.g. rule_1_input","['Prodigy']",", rule_2_input","['120']",")"),(0,r.kt)("li",{parentName:"ul"},"rule subtype (e.g. rule_1_subtype","['4']",", rule_2_subtype","['9']",")")))),(0,r.kt)("h4",{id:"advanced_search-parameters"},"advanced_search parameters"),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"INPUTS\n* ampache_url = (string)\n* ampache_API = (string)\n* operator = (string) 'and', 'or' (whether to match one rule or all)\n* rules = (array) = [[rule_1,rule_1_operator,rule_1_input], [rule_2,rule_2_operator,rule_2_input], [etc]]\n* type = (string) 'song', 'album', 'artist', 'playlist', 'label', 'user', 'video'\n* offset = (integer)\n* limit' = (integer)\n")),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/advanced_search%20(song).xml"},"Example")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/advanced_search%20(artist).xml"},"Example")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/advanced_search%20(album).xml"},"Example")),(0,r.kt)("h2",{id:"artists"},"artists"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This takes a collection of inputs and returns artist objects."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 1) if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'albums', 'songs' and will include the corresponding XML nested in the artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/artists.xml"},"Example")),(0,r.kt)("h2",{id:"artist"},"artist"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns a single artist based on the UID of said artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'albums', 'songs' and will include the corresponding XML nested in the artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/artist.xml"},"Example")),(0,r.kt)("h2",{id:"artist_albums"},"artist_albums"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the albums of an artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/artist_albums.xml"},"Example")),(0,r.kt)("h2",{id:"artist_songs"},"artist_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the songs of the specified artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/artist_songs.xml"},"Example")),(0,r.kt)("h2",{id:"albums"},"albums"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns albums based on the provided search filters\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 1) if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'albums', 'songs' will include the corresponding XML nested in the album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/albums.xml"},"Example")),(0,r.kt)("h2",{id:"album"},"album"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns a single album based on the UID provided\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'songs' and will include the corresponding XML nested in the album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/album.xml"},"Example")),(0,r.kt)("h2",{id:"album_songs"},"album_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the songs of a specified album\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/album_songs.xml"},"Example")),(0,r.kt)("h2",{id:"tags"},"tags"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the tags (Genres) based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/tags.xml"},"Example")),(0,r.kt)("h2",{id:"tag"},"tag"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns a single tag based on UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns tag XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/tag.xml"},"Example")),(0,r.kt)("h2",{id:"tag_artists"},"tag_artists"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the artists associated with the tag in question as defined by the UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns artist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/tag_artists.xml"},"Example")),(0,r.kt)("h2",{id:"tag_albums"},"tag_albums"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the albums associated with the tag in question\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns album XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/tag_albums.xml"},"Example")),(0,r.kt)("h2",{id:"tag_songs"},"tag_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"returns the songs for this tag\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/tag_songs.xml"},"Example")),(0,r.kt)("h2",{id:"songs"},"songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"Returns songs based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 1) if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/songs.xml"},"Example")),(0,r.kt)("h2",{id:"song"},"song"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"returns a single song\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Song, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/song.xml"},"Example")),(0,r.kt)("h2",{id:"playlists"},"playlists"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns playlists based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 1) if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlists.xml"},"Example")),(0,r.kt)("h2",{id:"playlist"},"playlist"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns a single playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of playlist, returns playlist XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_songs"},"playlist_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns the songs for a playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist, returns song XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_songs.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_create"},"playlist_create"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This create a new playlist and return it\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'name'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist type 'public', 'private'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_create.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_edit"},"playlist_edit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400003"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=420000")),(0,r.kt)("p",null,"This modifies name and type of a playlist\nPreviously name and type were mandatory while filter wasn't. this has been reversed.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'name'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist type 'public', 'private'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'items'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated song_id's (replace existing items with a new object_id)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'tracks'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated playlisttrack numbers matched to items in order"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_edit.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_delete"},"playlist_delete"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This deletes a playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_delete.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_add_song"},"playlist_add_song"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400001")),(0,r.kt)("p",null,"This adds a song to a playlist. setting check=1 will not add duplicates to the playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of song to add to playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'check'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1 Whether to check and ignore duplicates (default = 0)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_remove_song"},"playlist_remove_song"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400001")),(0,r.kt)("p",null,"This remove a song from a playlist.\nPrevious versions required 'track' instead of 'song'.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of song to remove from playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'track'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Track number to remove from playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_remove_song.xml"},"Example")),(0,r.kt)("h2",{id:"playlist_generate"},"playlist_generate"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400002")),(0,r.kt)("p",null,"Get a list of song XML, indexes or id's based on some simple search criteria\n'recent' will search for tracks played after 'Popular Threshold' days\n'forgotten' will search for tracks played before 'Popular Threshold' days\n'unplayed' added in 400002 for searching unplayed tracks"),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'mode'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'recent', 'forgotten', 'unplayed', 'random' (default = 'random')"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"string LIKE matched to song title"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'album'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artist'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'flag'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"get flagged songs only 0, 1 (default = 0)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'index', 'id' (default = 'song')"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_generate%20(song).xml"},"Example")),(0,r.kt)("p",null,"INDEX"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_generate%20(index).xml"},"Example")),(0,r.kt)("p",null,"ID"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/playlist_generate%20(id).xml"},"Example")),(0,r.kt)("h2",{id:"search_songs"},"search_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This searches the songs and returns... songs\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for Name returns share XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/search_songs.xml"},"Example")),(0,r.kt)("h2",{id:"videos"},"videos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns video objects!\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/videos.xml"},"Example")),(0,r.kt)("h2",{id:"video"},"video"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This returns a single video\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of video, returns video XML"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/video.xml"},"Example")),(0,r.kt)("h2",{id:"stats"},"stats"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001"),(0,r.kt)("li",{parentName:"ul"},"CHANGED_IN_API_VERSION=400001")),(0,r.kt)("p",null,"Get some items based on some simple search types and filters.\nThis method has partial backwards compatibility with older api versions but should be updated to follow the current input values.\n(Changed in 400001 'filter' added)\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'album', 'artist'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'newest', 'highest', 'frequent', 'recent', 'forgotten', 'flagged', 'random'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user_id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/stats%20(song).xml"},"Example")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/stats%20(artist).xml"},"Example")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/stats%20(album).xml"},"Example")),(0,r.kt)("h2",{id:"user"},"user"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get an user public information\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user to get details for"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/user.xml"},"Example")),(0,r.kt)("h2",{id:"user_create"},"user_create"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Create a new user. (Requires the username, password and email.)\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'password'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"hash('sha256', $password))"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'email'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"mailto:user@gmail.com"},"user@gmail.com"),"'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'fullname'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'disable'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/user_create.xml"},"Example")),(0,r.kt)("h2",{id:"user_update"},"user_update"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Update an existing user.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'password'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"hash('sha256', $password))"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'email'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"mailto:user@gmail.com"},"user@gmail.com"),"'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'fullname'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'website'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'state'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'city'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'disable'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'maxbitrate'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/user_update.xml"},"Example")),(0,r.kt)("h2",{id:"user_delete"},"user_delete"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Delete an existing user.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/user_delete.xml"},"Example")),(0,r.kt)("h2",{id:"followers"},"followers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get an user followers\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get followers list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/followers.xml"},"Example")),(0,r.kt)("h2",{id:"following"},"following"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get the user list followed by an user\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Username of the user for who to get following list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/following.xml"},"Example")),(0,r.kt)("h2",{id:"toggle_follow"},"toggle_follow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This follow/unfollow an user\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user to follow/unfollow"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/toggle_follow.xml"},"Example")),(0,r.kt)("h2",{id:"last_shouts"},"last_shouts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get the latest posted shouts\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get latest shouts"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/last_shouts.xml"},"Example")),(0,r.kt)("h2",{id:"rate"},"rate"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This rates a library item\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"library item type, album, artist, song, video"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"library item id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'rating'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"rating between 0-5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/rate.xml"},"Example")),(0,r.kt)("h2",{id:"flag"},"flag"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"This flags a library item as a favorite"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Setting flag to true (1) will set the flag"),(0,r.kt)("li",{parentName:"ul"},"Setting flag to false (0) will remove the flag\n@param array $input")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'album', 'artist', 'video'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'flag'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/flag.xml"},"Example")),(0,r.kt)("h2",{id:"record_play"},"record_play"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Take a song_id and update the object_count and user_activity table with a play. This allows other sources to record play history to ampache\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$user_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'client'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$agent"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/record_play.xml"},"Example")),(0,r.kt)("h2",{id:"scrobble"},"scrobble"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Search for a song using text info and then record a play if found. This allows other sources to record play history to ampache\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$song_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artist'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'album'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'songmbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$song_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artistmbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'albummbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'date'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'client'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$agent"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/scrobble.xml"},"Example")),(0,r.kt)("h2",{id:"catalog_action"},"catalog_action"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Kick off a catalog update or clean for the selected catalog\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'task'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'add_to_catalog', 'clean_catalog'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'catalog'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$catalog_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/catalog_action%20(clean_catalog.xml"},"Example: clean_catalog"),")"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/catalog_action%20(add_to_catalog.xml"},"Example: add_to_catalog"),")"),(0,r.kt)("h2",{id:"timeline"},"timeline"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get an user timeline\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for whom to get the timeline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/timeline.xml"},"Example")),(0,r.kt)("h2",{id:"friends_timeline"},"friends_timeline"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This get current user friends timeline\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/friends_timeline.xml"},"Example")),(0,r.kt)("h2",{id:"update_from_tags"},"update_from_tags"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Update a single album, artist, song from the tag data\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'artist', 'album', 'song'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id, $album_id, $song_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/update_from_tags.xml"},"Example")),(0,r.kt)("h2",{id:"update_artist_info"},"update_artist_info"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Update artist information and fetch similar artists from last.fm\nMake sure lastfm_API_key is set in your configuration file\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/update_artist_info.xml"},"Example")),(0,r.kt)("h2",{id:"update_art"},"update_art"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Updates a single album, artist, song running the gather_art process\nDoesn't overwrite existing art by default.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'podcast'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'overwrite'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/update_art.xml"},"Example")),(0,r.kt)("h2",{id:"update_podcast"},"update_podcast"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=410005")),(0,r.kt)("p",null,"Sync and download new podcast episodes\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/master/docs/xml-responses/update_podcast.xml"},"Example")),(0,r.kt)("h2",{id:"binary-data-methods"},"Binary Data Methods"),(0,r.kt)("h2",{id:"stream"},"stream"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Streams a given media file. Takes the file id in parameter with optional max bit rate, file format, time offset, size and estimate content length option.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'podcast'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'bitrate'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"max bitrate for transcoding"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'mp3', 'ogg', 'raw', etc"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"time offset in seconds"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'length'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"0, 1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("h2",{id:"download"},"download"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Downloads a given media file. set format=raw to download the full file\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'song', 'podcast'"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'mp3', 'ogg', 'raw', etc"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("h2",{id:"get_art"},"get_art"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=400001")),(0,r.kt)("p",null,"Get an art image.\n@param array $input"),(0,r.kt)("h2",{id:"control-methods"},"Control Methods"),(0,r.kt)("h2",{id:"localplay"},"localplay"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This is for controlling localplay\n@param array $input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},"TBC\n")),(0,r.kt)("h2",{id:"democratic"},"democratic"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MINIMUM_API_VERSION=380001")),(0,r.kt)("p",null,"This is for controlling democratic play\n@param array $input"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ACTION",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"method",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"vote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"),(0,r.kt)("li",{parentName:"ul"},"type (Type of object, only song is currently accepted so this is optional)"))),(0,r.kt)("li",{parentName:"ul"},"devote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"),(0,r.kt)("li",{parentName:"ul"},"type (Type of object, only song is currently accepted so this is optional)"))),(0,r.kt)("li",{parentName:"ul"},"playlist (Returns an array of song items with an additional \\",(0,r.kt)("vote",null,"[VOTE COUNT]","\\")," element)"),(0,r.kt)("li",{parentName:"ul"},"play (Returns the URL for playing democratic play)")))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'oid'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'method'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'action'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},"TBC\n")),(0,r.kt)("p",null,"All XML Documents that have a ",(0,r.kt)("inlineCode",{parentName:"p"},"<tag></tag>"),' element may have 0 or more tag elements associated with them. Each tag element has an attribute "count" that indicates the number of people who have specified this tag.'),(0,r.kt)("p",null,"Artists XML Document. ID's are Ampache's unique Identifier for the artist."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<artist id="12039">\n        <name>Metallica</name>\n        <albums># of Albums</albums>\n        <songs># of Songs</songs>\n        <tag id="2481" count="2">Rock & Roll</tag>\n        <tag id="2482" count="1">Rock</tag>\n        <tag id="2483" count="1">Roll</tag>\n        <preciserating>3</preciserating>\n        <rating>2.9</rating>\n</artist>\n<artist id="129348">\n        <name>AC/DC</name>\n        <albums># of Albums</albums>\n        <songs># of Songs</songs>\n        <tag id="2481" count="2">Rock & Roll</tag>\n        <tag id="2482" count="2">Rock</tag>\n        <tag id="2483" count="1">Roll</tag>\n        <preciserating>3</preciserating>\n        <rating>2.9</rating>\n</artist>\n</root>\n')),(0,r.kt)("p",null,"Album XML Document. ID's are Ampache's unique identifier for the album and artist associated."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<album id="2910">\n        <name>Back in Black</name>\n        <artist id="129348">AC/DC</artist>\n        <year>1984</year>\n        <tracks>12</tracks>\n        <disk>1</disk>\n        <tag id="2481" count="2">Rock & Roll</tag>\n        <tag id="2482" count="1">Rock</tag>\n        <tag id="2483" count="1">Roll</tag>\n        <art>http://localhost/image.php?id=129348</art>\n        <preciserating>3</preciserating>\n        <rating>2.9</rating>\n</album>\n</root>\n')),(0,r.kt)("p",null,"Single Song XML document, includes references to its parent objects."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<song id="3180">\n        <title>Hells Bells</title>\n        <artist id="129348">AC/DC</artist>\n        <album id="2910">Back in Black</album>\n        <tag id="2481" count="3">Rock & Roll</tag>\n        <tag id="2482" count="1">Rock</tag>\n        <tag id="2483" count="1">Roll</tag>\n        <track>4</track>\n        <time>234</time>\n        <url>http://localhost/play/index.php?oid=123908...</url>\n        <size>Song Filesize in Bytes</size>\n        <art>http://localhost/image.php?id=129348</art>\n        <preciserating>3</preciserating>\n        <rating>2.9</rating>\n</song>\n</root>\n')),(0,r.kt)("p",null,"Tag XML Document, includes counts for it's child objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<tag id="2481">\n        <name>Rock & Roll</name>\n        <albums>84</albums>\n        <artists>29</artists>\n        <songs>239</songs>\n        <video>13</video>\n        <playlist>2</playlist>\n        <stream>6</stream>\n</tag>\n</root>\n')),(0,r.kt)("p",null,"Playlist XML Document, includes counts for it's child objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<playlist id="1234">\n        <name>The Good Stuff</name>\n        <owner>Karl Vollmer</owner>\n        <items>50</items>\n        <tag id="2481" count="2">Rock & Roll</tag>\n        <tag id="2482" count="2">Rock</tag>\n        <tag id="2483" count="1">Roll</tag>\n        <type>Public</type>\n</playlist>\n</root>\n')),(0,r.kt)("p",null,"Video XML Document -- Attention UIDs for video elements are non-unique against song.id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-XML"},'<root>\n<video id="1234">\n          <title>Futurama Bender\'s Big Score</title>\n          <mime>video/avi</mime>\n          <resolution>720x288</resolution>\n          <size>Video Filesize in Bytes</size>\n          <tag id="12131" count="3">Futurama</tag>\n          <tag id="32411" count="1">Movie</tag>\n          <url>http://localhost/play/index.php?oid=123908...</url>\n</video>\n</root>\n')))}k.isMDXComponent=!0}}]);