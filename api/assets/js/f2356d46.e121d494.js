"use strict";(self.webpackChunkampache_org_api=self.webpackChunkampache_org_api||[]).push([[6365],{3905:(t,a,e)=>{e.d(a,{Zo:()=>k,kt:()=>g});var n=e(7294);function r(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){r(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function p(t,a){if(null==t)return{};var e,n,r=function(t,a){if(null==t)return{};var e,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||(r[e]=t[e]);return r}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var m=n.createContext({}),d=function(t){var a=n.useContext(m),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},k=function(t){var a=d(t.components);return n.createElement(m.Provider,{value:a},t.children)},s={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},o=n.forwardRef((function(t,a){var e=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,k=p(t,["components","mdxType","originalType","parentName"]),o=d(e),g=r,u=o["".concat(m,".").concat(g)]||o[g]||s[g]||l;return e?n.createElement(u,i(i({ref:a},k),{},{components:e})):n.createElement(u,i({ref:a},k))}));function g(t,a){var e=arguments,r=a&&a.mdxType;if("string"==typeof t||r){var l=e.length,i=new Array(l);i[0]=o;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var d=2;d<l;d++)i[d]=e[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}o.displayName="MDXCreateElement"},5590:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=e(7462),r=(e(7294),e(3905));const l={title:"JSON 4.2",metaTitle:"JSON 4.2",description:"API documentation"},i=void 0,p={unversionedId:"versions/api-4.2/api-json-methods",id:"versions/api-4.2/api-json-methods",title:"JSON 4.2",description:"API documentation",source:"@site/docs/versions/api-4.2/api-json-methods.md",sourceDirName:"versions/api-4.2",slug:"/versions/api-4.2/api-json-methods",permalink:"/api/versions/api-4.2/api-json-methods",draft:!1,tags:[],version:"current",frontMatter:{title:"JSON 4.2",metaTitle:"JSON 4.2",description:"API documentation"},sidebar:"api",previous:{title:"XML 4.2",permalink:"/api/versions/api-4.2/api-xml-methods"},next:{title:"Errors 4.2",permalink:"/api/versions/api-4.2/api-errors"}},m={},d=[{value:"Non-Data Methods",id:"non-data-methods",level:2},{value:"handshake",id:"handshake",level:2},{value:"ping",id:"ping",level:2},{value:"goodbye",id:"goodbye",level:2},{value:"url_to_song",id:"url_to_song",level:2},{value:"Data Methods",id:"data-methods",level:2},{value:"get_indexes",id:"get_indexes",level:2},{value:"advanced_search",id:"advanced_search",level:2},{value:"Changes to text searches",id:"changes-to-text-searches",level:3},{value:"Using advanced_search",id:"using-advanced_search",level:3},{value:"artists",id:"artists",level:2},{value:"artist",id:"artist",level:2},{value:"artist_albums",id:"artist_albums",level:2},{value:"artist_songs",id:"artist_songs",level:2},{value:"albums",id:"albums",level:2},{value:"album",id:"album",level:2},{value:"album_songs",id:"album_songs",level:2},{value:"tags",id:"tags",level:2},{value:"tag",id:"tag",level:2},{value:"tag_artists",id:"tag_artists",level:2},{value:"tag_albums",id:"tag_albums",level:2},{value:"tag_songs",id:"tag_songs",level:2},{value:"songs",id:"songs",level:2},{value:"song",id:"song",level:2},{value:"playlists",id:"playlists",level:2},{value:"playlist",id:"playlist",level:2},{value:"playlist_songs",id:"playlist_songs",level:2},{value:"playlist_create",id:"playlist_create",level:2},{value:"playlist_edit",id:"playlist_edit",level:2},{value:"playlist_delete",id:"playlist_delete",level:2},{value:"playlist_add_song",id:"playlist_add_song",level:2},{value:"playlist_remove_song",id:"playlist_remove_song",level:2},{value:"playlist_generate",id:"playlist_generate",level:2},{value:"shares",id:"shares",level:2},{value:"share",id:"share",level:2},{value:"share_create",id:"share_create",level:2},{value:"share_edit",id:"share_edit",level:2},{value:"share_delete",id:"share_delete",level:2},{value:"get_similar",id:"get_similar",level:2},{value:"search_songs",id:"search_songs",level:2},{value:"videos",id:"videos",level:2},{value:"video",id:"video",level:2},{value:"podcasts",id:"podcasts",level:2},{value:"podcast",id:"podcast",level:2},{value:"podcast_create",id:"podcast_create",level:2},{value:"podcast_edit",id:"podcast_edit",level:2},{value:"podcast_delete",id:"podcast_delete",level:2},{value:"podcast_episodes",id:"podcast_episodes",level:2},{value:"podcast_episode",id:"podcast_episode",level:2},{value:"podcast_episode_delete",id:"podcast_episode_delete",level:2},{value:"stats",id:"stats",level:2},{value:"user",id:"user",level:2},{value:"user_create",id:"user_create",level:2},{value:"user_update",id:"user_update",level:2},{value:"user_delete",id:"user_delete",level:2},{value:"licenses",id:"licenses",level:2},{value:"license",id:"license",level:2},{value:"license_songs",id:"license_songs",level:2},{value:"followers",id:"followers",level:2},{value:"following",id:"following",level:2},{value:"toggle_follow",id:"toggle_follow",level:2},{value:"last_shouts",id:"last_shouts",level:2},{value:"rate",id:"rate",level:2},{value:"flag",id:"flag",level:2},{value:"record_play",id:"record_play",level:2},{value:"scrobble",id:"scrobble",level:2},{value:"catalogs",id:"catalogs",level:2},{value:"catalog",id:"catalog",level:2},{value:"catalog_action",id:"catalog_action",level:2},{value:"catalog_file",id:"catalog_file",level:2},{value:"timeline",id:"timeline",level:2},{value:"friends_timeline",id:"friends_timeline",level:2},{value:"update_from_tags",id:"update_from_tags",level:2},{value:"update_artist_info",id:"update_artist_info",level:2},{value:"update_art",id:"update_art",level:2},{value:"update_podcast",id:"update_podcast",level:2},{value:"Binary Data Methods",id:"binary-data-methods",level:2},{value:"stream",id:"stream",level:2},{value:"download",id:"download",level:2},{value:"get_art",id:"get_art",level:2},{value:"Control Methods",id:"control-methods",level:2},{value:"localplay",id:"localplay",level:2},{value:"democratic",id:"democratic",level:2}],k={toc:d};function s(t){let{components:a,...e}=t;return(0,r.kt)("wrapper",(0,n.Z)({},k,e,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Lets go through come calls and examples that you can do for each JSON method."),(0,r.kt)("p",null,"Remember that Binary data methods will not return JSON; just the file/data you have requested."),(0,r.kt)("h2",{id:"non-data-methods"},"Non-Data Methods"),(0,r.kt)("h2",{id:"handshake"},"handshake"),(0,r.kt)("p",null,"This is the function that handles verifying a new handshake Takes a timestamp, auth key, and username."),(0,r.kt)("p",null,"@param array $input\n@return boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$passphrase (Timestamp . Password SHA hash) OR (API Key)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username (Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'timestamp'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME() (Timestamp used in seed of password hash. Required if login/password authentication)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'version'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$version (API Version that the application understands)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/handshake.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"ping"},"ping"),(0,r.kt)("p",null,"This can be called without being authenticated, it is useful for determining if what the status of the server is, and what version it is running/compatible with\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Session ID) returns version information and extends the session if passed"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/ping.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"goodbye"},"goodbye"),(0,r.kt)("p",null,"Destroy a session using the auth parameter."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'auth'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Session ID) destroys the session if it exists"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/goodbye.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"url_to_song"},"url_to_song"),(0,r.kt)("p",null,"This takes a url and returns the song object in question\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'url'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Full Ampache URL from server, translates back into a song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/url_to_song.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"data-methods"},"Data Methods"),(0,r.kt)("h2",{id:"get_indexes"},"get_indexes"),(0,r.kt)("p",null,"This takes a collection of inputs and returns ID + name for the object type\n@param array $input\n@return boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"album"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"playlist")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONGS"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/get_indexes%20(song).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/get_indexes%20(artist).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/get_indexes%20(album).json"},"Example: API 4.2")),(0,r.kt)("p",null,"PLAYLIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/get_indexes%20(playlist).json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"advanced_search"},"advanced_search"),(0,r.kt)("h3",{id:"changes-to-text-searches"},"Changes to text searches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'is not' has been added shifting values down the list.\n0=contains, 1=does not contain, 2=starts with, 3=ends with\n4=is, 5=is not, 6=sounds like, 7=does not sound like"),(0,r.kt)("li",{parentName:"ul"},"rule_1","['name']"," is depreciated. Instead of rule_1","['name']"," use rule_1","['title']"," (I have put a temp workaround into the search rules to alleviate this change for any existing apps)"),(0,r.kt)("li",{parentName:"ul"},"Metadata Search is combined with text and numeric. Meaning that changes to text lists push the numeric fields down.")),(0,r.kt)("h3",{id:"using-advanced_search"},"Using advanced_search"),(0,r.kt)("p",null,"Perform an advanced search given passed rules. This works in a similar way to the web/UI search pages.\nYou can pass multiple rules as well as joins to create in depth search results"),(0,r.kt)("p",null,"Rules must be sent in groups of 3 using an int (starting from 1) to designate which rules are combined.\nUse operator ('and', 'or') to choose whether to join or separate each rule when searching."),(0,r.kt)("p",null,"Refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://ampache.org/api/versions/api-4.2/api-advanced-search"},"Advanced Search")," page for details about creating searches."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"INPUTS\n* ampache_url = (string)\n* ampache_API = (string)\n* operator = (string) `and`, `or` (whether to match one rule or all)\n* rules = (array) = [[`rule_1`, `rule_1_operator`, `rule_1_input`], [`rule_2`, `rule_2_operator`, `rule_2_input`], [etc]]\n* type = (string) `song`, `album`, `artist`, `playlist`, `label`, `user`, `video`\n* random = (integer) `0`, `1` (random order of results; default to 0)\n* offset = (integer)\n* limit' = (integer)\n")),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/advanced_search%20(song).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/advanced_search%20(artist).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/advanced_search%20(album).json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"artists"},"artists"),(0,r.kt)("p",null,"This takes a collection of inputs and returns artist objects."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (if true filter is exact rather then fuzzy)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"albums"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"songs")," (include child objects in the response)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/artists.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"artist"},"artist"),(0,r.kt)("p",null,"This returns a single artist based on the UID of said artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns artist JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"albums"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"songs")," (include child objects in the response)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/artist.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"artist_albums"},"artist_albums"),(0,r.kt)("p",null,"This returns the albums of an artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Album JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/artist_albums.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"artist_songs"},"artist_songs"),(0,r.kt)("p",null,"This returns the songs of the specified artist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Artist, returns Song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/artist_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"albums"},"albums"),(0,r.kt)("p",null,"This returns albums based on the provided search filters\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (if true filter is exact rather then fuzzy)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"albums"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"songs")," (include child objects in the response)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/albums.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"album"},"album"),(0,r.kt)("p",null,"This returns a single album based on the UID provided\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns album JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"'songs' and will include the corresponding JSON nested in the album JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/album.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"album_songs"},"album_songs"),(0,r.kt)("p",null,"This returns the songs of a specified album\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Album, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/album_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"tags"},"tags"),(0,r.kt)("p",null,"This returns the tags (Genres) based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/tags.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"tag"},"tag"),(0,r.kt)("p",null,"This returns a single tag based on UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns tag JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/tag.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"tag_artists"},"tag_artists"),(0,r.kt)("p",null,"This returns the artists associated with the tag in question as defined by the UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns artist JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/tag_artists.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"tag_albums"},"tag_albums"),(0,r.kt)("p",null,"This returns the albums associated with the tag in question\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns album JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/tag_albums.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"tag_songs"},"tag_songs"),(0,r.kt)("p",null,"returns the songs for this tag\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of tag, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/tag_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"songs"},"songs"),(0,r.kt)("p",null,"Returns songs based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (if true filter is exact rather then fuzzy)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"song"},"song"),(0,r.kt)("p",null,"returns a single song\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Song, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/song.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlists"},"playlists"),(0,r.kt)("p",null,"This returns playlists based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (if true filter is exact rather then fuzzy)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) add date is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format (2020-09-16) update itme is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlists.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist"},"playlist"),(0,r.kt)("p",null,"This returns a single playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of playlist, returns playlist JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_songs"},"playlist_songs"),(0,r.kt)("p",null,"This returns the songs for a playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_create"},"playlist_create"),(0,r.kt)("p",null,"This create a new playlist and return it\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'name'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"public"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"private")," (Playlist type)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_create.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_edit"},"playlist_edit"),(0,r.kt)("p",null,"This modifies name and type of a playlist\nPreviously name and type were mandatory while filter wasn't. this has been reversed.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'name'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Playlist name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"public"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"private")," (Playlist type)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'items'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated song_id's (replace existing items with a new object_id)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'tracks'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated playlisttrack numbers matched to items in order"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_edit.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_delete"},"playlist_delete"),(0,r.kt)("p",null,"This deletes a playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_delete.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_add_song"},"playlist_add_song"),(0,r.kt)("p",null,"This adds a song to a playlist. setting check=1 will not add duplicates to the playlist\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of song to add to playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'check'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," Whether to check and ignore duplicates (default = 0)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_add_song.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_remove_song"},"playlist_remove_song"),(0,r.kt)("p",null,"This remove a song from a playlist.\nPrevious versions required 'track' instead of 'song'.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of song to remove from playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'track'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Track number to remove from playlist"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_remove_song.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"playlist_generate"},"playlist_generate"),(0,r.kt)("p",null,"Get a list of song JSON, indexes or id's based on some simple search criteria\n'recent' will search for tracks played after 'Popular Threshold' days\n'forgotten' will search for tracks played before 'Popular Threshold' days\n'unplayed' added in 400002 for searching unplayed tracks"),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'mode'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"recent"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"forgotten"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unplayed"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"random")," (default = 'random')"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"string LIKE matched to song title"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'album'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artist'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'flag'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (get flagged songs only. default = 0)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"index"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"id")," (default = 'song')"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_generate%20(song).json"},"Example: API 4.2")),(0,r.kt)("p",null,"INDEX"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_generate%20(index).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ID"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/playlist_generate%20(id).json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"shares"},"shares"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This searches the shares and returns... shares\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for Share Title"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," boolean to match the exact filter string"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/shares.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"share"},"share"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"(MINIMUM_API_VERSION=420000)")),(0,r.kt)("p",null,"Return shares by UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Share, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/share.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"share_create"},"share_create"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"(MINIMUM_API_VERSION=420000")),(0,r.kt)("p",null,"Create a public url that can be used by anyone to stream media.\nTakes the file id with optional description and expires parameters."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of object you are sharing"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"object_type"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'description'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"description (will be filled for you if empty)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'expires'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"days to keep active"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/share_create.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"share_edit"},"share_edit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"(MINIMUM_API_VERSION=420000")),(0,r.kt)("p",null,"Update the description and/or expiration date for an existing share.\nTakes the share id to update with optional description and expires parameters."),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Alpha-numeric search term"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'stream'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'download'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'expires'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"number of whole days before expiry"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'description'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"update description"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/share_edit.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"share_delete"},"share_delete"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"(MINIMUM_API_VERSION=420000")),(0,r.kt)("p",null,"Delete an existing share."),(0,r.kt)("p",null,"@param array $input\n| Input    | Type   | Description            | Optional |\n|----------|--------|------------------------|---------:|\n| 'filter' | string | UID of Share to delete |       NO |"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/share_delete.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"get_similar"},"get_similar"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Return similar artist id's or similar song ids compared to the input filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"artist id or song id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/get_similar.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"search_songs"},"search_songs"),(0,r.kt)("p",null,"This searches the songs and returns... songs\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for Song Title, Artist Name, Album Name, Genre Name returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/search_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"videos"},"videos"),(0,r.kt)("p",null,"This returns video objects!\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"if true filter is exact rather then fuzzy"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/videos.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"video"},"video"),(0,r.kt)("p",null,"This returns a single video\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of video, returns video JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/video.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcasts"},"podcasts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Get information about podcasts\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"episodes")," (include podcast_episodes in the response)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/podcasts.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast"},"podcast"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Get the podcast from it's id.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'include'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"episodes")," (include podcast_episodes in the response)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/podcast.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_create"},"podcast_create"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Create a podcast that can be used by anyone to stream media.\nTakes the url and catalog parameters.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'url'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"rss url for podcast"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'catalog'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"podcast catalog"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/podcast_create.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_edit"},"podcast_edit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Update the description and/or expiration date for an existing podcast.\nTakes the podcast id to update with optional description and expires parameters.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Alpha-numeric search term"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'feed'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"feed rss xml url"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'title'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"title string"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'website'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"source website url"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'description'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'generator'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'copyright'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/podcast_edit.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_delete"},"podcast_delete"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Delete an existing podcast.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of podcast to delete"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/podcast_delete.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_episodes"},"podcast_episodes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This returns the episodes for a podcast\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of podcast"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/podcast_episodes.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_episode"},"podcast_episode"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Get the podcast_episode from it's id.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"podcast_episode ID number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/podcast_episode.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"podcast_episode_delete"},"podcast_episode_delete"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Delete an existing podcast_episode.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of podcast_episode to delete"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/podcast_episode_delete.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"stats"},"stats"),(0,r.kt)("p",null,"Get some items based on some simple search types and filters.\nThis method has partial backwards compatibility with older api versions but should be updated to follow the current input values.\n(Changed in 400001 'filter' added)"),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"album"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"newest"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"highest"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"frequent"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"recent"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"forgotten"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"flagged"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"random")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user_id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,"SONG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/stats%20(song).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ARTIST"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/stats%20(artist).json"},"Example: API 4.2")),(0,r.kt)("p",null,"ALBUM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/stats%20(album).json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"user"},"user"),(0,r.kt)("p",null,"This gets a user's public information\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user to get details for"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/user.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"user_create"},"user_create"),(0,r.kt)("p",null,"Create a new user. (Requires the username, password and email.)\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'password'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"hash('sha256', $password)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'email'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"e.g. ",(0,r.kt)("a",{parentName:"td",href:"mailto:user@gmail.com"},"user@gmail.com")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'fullname'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'disable'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/user_create.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"user_update"},"user_update"),(0,r.kt)("p",null,"Update an existing user.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$username"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'password'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"hash('sha256', $password)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'email'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"e.g. ",(0,r.kt)("a",{parentName:"td",href:"mailto:user@gmail.com"},"user@gmail.com")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'fullname'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'website'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'state'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'city'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'disable'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'maxbitrate'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/user_update.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"user_delete"},"user_delete"),(0,r.kt)("p",null,"Delete an existing user.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/user_delete.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"licenses"},"licenses"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This returns licenses based on the specified filter\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value is Alpha Match for returned results, may be more than one letter/number"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'exact'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (if true filter is exact rather then fuzzy)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'add'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format assumed filter method is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'update'"),(0,r.kt)("td",{parentName:"tr",align:null},"set_filter"),(0,r.kt)("td",{parentName:"tr",align:null},"ISO 8601 Date Format assumed filter method is newer then specified date"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/licenses.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"license"},"license"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This returns a single license\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of license, returns license JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/license.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"license_songs"},"license_songs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This returns the songs for a license\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of license, returns song JSON"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/license_songs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"followers"},"followers"),(0,r.kt)("p",null,"This gets a user's followers\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get followers list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/followers.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"following"},"following"),(0,r.kt)("p",null,"This get the user list followed by an user\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"(Username of the user for who to get following list"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/following.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"toggle_follow"},"toggle_follow"),(0,r.kt)("p",null,"This follow/unfollow an user\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user to follow/unfollow"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/toggle_follow.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"last_shouts"},"last_shouts"),(0,r.kt)("p",null,"This get the latest posted shouts\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for who to get latest shouts"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/last_shouts.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"rate"},"rate"),(0,r.kt)("p",null,"This rates a library item\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"album"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"video")," (item type)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"library item id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'rating'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"rating between 0-5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/rate.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"flag"},"flag"),(0,r.kt)("p",null,"This flags a library item as a favorite"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Setting flag to true (1) will set the flag"),(0,r.kt)("li",{parentName:"ul"},"Setting flag to false (0) will remove the flag\n@param array $input")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"album"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"video")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'flag'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/flag.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"record_play"},"record_play"),(0,r.kt)("p",null,"Take a song_id and update the object_count and user_activity table with a play. This allows other sources to record play history to ampache\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'user'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$user_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'client'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$agent"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/record_play.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"scrobble"},"scrobble"),(0,r.kt)("p",null,"Search for a song using text info and then record a play if found. This allows other sources to record play history to ampache\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'song'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$song_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artist'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'album'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_name"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'songmbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$song_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'artistmbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'albummbid'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$album_mbid"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'date'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'client'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"$agent"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/scrobble.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"catalogs"},"catalogs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"This searches the catalogs and returns... catalogs\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"music"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"clip"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"tvshow"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"movie"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"personal_video"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"podcast")," (Catalog type)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/catalogs.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"catalog"},"catalog"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Return catalog by UID\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'filter'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Catalog"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/catalog.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"catalog_action"},"catalog_action"),(0,r.kt)("p",null,"Kick off a catalog update or clean for the selected catalog\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'task'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"add_to_catalog"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"clean_catalog")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'catalog'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$catalog_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/catalog_action%20(clean_catalog).json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"catalog_file"},"catalog_file"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NEW")," in 4.2.0")),(0,r.kt)("p",null,"Perform actions on local catalog files.\nSingle file versions of catalog add, clean, verify and remove (delete)\nMake sure you remember to urlencode those file names!"),(0,r.kt)("p",null,"@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'file'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"FULL path to local file"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'task'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"add"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"clean"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"verify"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"remove")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'catalog'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$catalog_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/catalog_file.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"timeline"},"timeline"),(0,r.kt)("p",null,"This gets a user's timeline\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'username'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the user for whom to get the timeline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/timeline.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"friends_timeline"},"friends_timeline"),(0,r.kt)("p",null,"This get current user friends timeline\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'limit'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'since'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UNIXTIME()"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/friends_timeline.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"update_from_tags"},"update_from_tags"),(0,r.kt)("p",null,"Update a single album, artist, song from the tag data\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"artist"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"album")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id, $album_id, $song_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/update_from_tags.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"update_artist_info"},"update_artist_info"),(0,r.kt)("p",null,"Update artist information and fetch similar artists from last.fm\nMake sure lastfm_API_key is set in your configuration file\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$artist_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/update_artist_info.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"update_art"},"update_art"),(0,r.kt)("p",null,"Updates a single album, artist, song running the gather_art process\nDoesn't overwrite existing art by default.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"podcast")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'overwrite'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/update_art.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"update_podcast"},"update_podcast"),(0,r.kt)("p",null,"Sync and download new podcast episodes\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/4.2.2-1/docs/json-responses/update_podcast.json"},"Example: API 4.2")),(0,r.kt)("h2",{id:"binary-data-methods"},"Binary Data Methods"),(0,r.kt)("h2",{id:"stream"},"stream"),(0,r.kt)("p",null,"Streams a given media file. Takes the file id in parameter with optional max bit rate, file format, time offset, size and estimate content length option.\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"podcast")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'bitrate'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"max bitrate for transcoding"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mp3"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ogg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"raw"),", etc (raw returns the original format)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'offset'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"time offset in seconds"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'length'"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("h2",{id:"download"},"download"),(0,r.kt)("p",null,"Downloads a given media file. set format=raw to download the full file\n@param array $input"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'id'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"$object_id"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'type'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"song"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"podcast")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'format'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mp3"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ogg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"raw"),", etc (raw returns the original format)"),(0,r.kt)("td",{parentName:"tr",align:"right"},"YES")))),(0,r.kt)("h2",{id:"get_art"},"get_art"),(0,r.kt)("p",null,"Get an art image.\n@param array $input"),(0,r.kt)("h2",{id:"control-methods"},"Control Methods"),(0,r.kt)("h2",{id:"localplay"},"localplay"),(0,r.kt)("p",null,"This is for controlling localplay\n@param array $input"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/localplay.json"},"Example: API 4.2")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/localplay%20(status).json"},"Example (status)")),(0,r.kt)("h2",{id:"democratic"},"democratic"),(0,r.kt)("p",null,"This is for controlling democratic play (Songs only)\n@param array $input"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ACTION",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"method",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"vote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"))),(0,r.kt)("li",{parentName:"ul"},"devote",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"oid (Unique ID of the element you want to vote on)"))),(0,r.kt)("li",{parentName:"ul"},"playlist (Returns an array of song items with an additional \\",(0,r.kt)("vote",null,"[VOTE COUNT]","\\")," element)"),(0,r.kt)("li",{parentName:"ul"},"play (Returns the URL for playing democratic play)")))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Optional"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'oid'"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"UID of Song object"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'method'"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"vote"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"devote"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"playlist"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"play")),(0,r.kt)("td",{parentName:"tr",align:"right"},"NO")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/ampache/python3-ampache/973d5c9d1118e1101ee8610b2f1bb188aa283a10/docs/json-responses/democratic%20(play).json"},"Example: API 4.2")))}s.isMDXComponent=!0}}]);