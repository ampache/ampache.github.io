"use strict";(self.webpackChunkampache_org_api=self.webpackChunkampache_org_api||[]).push([[7139],{4131:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api-media-methods","title":"Media Methods","description":"API documentation","source":"@site/docs/api-media-methods.md","sourceDirName":".","slug":"/api-media-methods","permalink":"/api/api-media-methods","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Media Methods","metaTitle":"Media Methods","description":"API documentation"},"sidebar":"api","previous":{"title":"Access Control Lists","permalink":"/api/api-acls"},"next":{"title":"API Browse methods","permalink":"/api/api-browse"}}');var i=a(4848),r=a(8453);const o={title:"Media Methods",metaTitle:"Media Methods",description:"API documentation"},t=void 0,l={},d=[{value:"Explaining stream",id:"explaining-stream",level:2},{value:"Explaining download",id:"explaining-download",level:2},{value:"The Ampache media playback process",id:"the-ampache-media-playback-process",level:2},{value:"Explaining scrobble",id:"explaining-scrobble",level:2},{value:"Explaining record_play",id:"explaining-record_play",level:2},{value:"Explaining player",id:"explaining-player",level:2},{value:"Final thoughts",id:"final-thoughts",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"It can be confusing about what Ampache does and what you need to do as an API client."}),"\n",(0,i.jsx)(n.p,{children:"This page will document a few things about how playback works and what a client can expect from Ampache."}),"\n",(0,i.jsx)(n.p,{children:"There are 2 binary data methods used for basic playback function:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["stream (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#stream",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#stream",children:"xml"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["download (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#download",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#download",children:"xml"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"And there are 3 helper functions which allow you to manage playback history and state but do not return media."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["scrobble (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#scrobble",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#scrobble",children:"xml"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["record_play (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#record_play",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#record_play",children:"xml"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["player (Ampache 6.4.0+) (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#player",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#player",children:"xml"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, you can also call the function now_playing to get details about what your user is currently stremaing. (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#now_playing",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#now_playing",children:"xml"}),")"]}),"\n",(0,i.jsx)(n.h2,{id:"explaining-stream",children:"Explaining stream"}),"\n",(0,i.jsx)(n.p,{children:"Stream is used to play a song in the same way as the Webplayer."}),"\n",(0,i.jsx)(n.p,{children:"The URL generated by stream will match the URL property in all song object repsonses"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-JSON",children:'"url": "https:\\/\\/music.com.au\\/play\\/index.php?ssid=cfj3f237d563f479f5223k23189dbb34&type=song&oid=115&uid=4&transcode_to=mp3&player=api&name=Chi.Otic%20-%20Are%20we%20going%20Crazy.mp3",\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-XML",children:"<url><![CDATA[https://music.com.au/play/index.php?ssid=cfj3f237d563f479f5223k23189dbb34&type=song&oid=54&uid=4&player=api&name=Synthetic%20-%20Red-GreenSmoke.mp3]]></url>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When you play a song; ",(0,i.jsx)(n.code,{children:"stream"})," will:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Record a play in the database which is recorded as a ",(0,i.jsx)(n.code,{children:"stream"})]}),"\n",(0,i.jsxs)(n.li,{children:["If you stream a new song too quickly the last song will be marked as ",(0,i.jsx)(n.code,{children:"skip"})]}),"\n",(0,i.jsxs)(n.li,{children:["Play count is incremented ",(0,i.jsx)(n.strong,{children:"UP"})," for a stream and back ",(0,i.jsx)(n.strong,{children:"DOWN"})," for a skip"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"It is very important to note that play history is compared to the client string. You can play a song on a browser, start a subsonic stream and then an api client stream right after and all 3 plays will be recorded as streams because they are different clients."}),"\n",(0,i.jsx)(n.h2,{id:"explaining-download",children:"Explaining download"}),"\n",(0,i.jsx)(n.p,{children:"A download is not considered a stream and does not go through the same stat checks."}),"\n",(0,i.jsxs)(n.p,{children:["When you ",(0,i.jsx)(n.code,{children:"download"})," a song:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Record the action as a ",(0,i.jsx)(n.code,{children:"download"})]}),"\n",(0,i.jsx)(n.li,{children:"A download does not perform skip checks and ignores any recent play history"}),"\n",(0,i.jsxs)(n.li,{children:["Play counts are ",(0,i.jsx)(n.strong,{children:"NOT"})," incremented."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Download is used for caching files without the server thinking you've played 40 songs in 3 minutes."}),"\n",(0,i.jsx)(n.p,{children:"Use the helper functions when playing downloads so you can inform the server when you actually play the files you download."}),"\n",(0,i.jsx)(n.h2,{id:"the-ampache-media-playback-process",children:"The Ampache media playback process"}),"\n",(0,i.jsxs)(n.p,{children:["Stat checks happen every time you call a ",(0,i.jsx)(n.code,{children:"stream"})," or ",(0,i.jsx)(n.code,{children:"download"})," ",(0,i.jsx)(n.strong,{children:"URL"})," (including part stream content-range calls)"]}),"\n",(0,i.jsxs)(n.p,{children:["e.g. ",(0,i.jsx)(n.code,{children:"https://music.com.au/play/index.php?ssid=cfj3f237d563f479f5223k23189dbb34&type=song&oid=54&uid=4&player=api&name=Synthetic%20-%20Red-GreenSmoke.mp3"})]}),"\n",(0,i.jsxs)(n.p,{children:["When you use the API ",(0,i.jsx)(n.code,{children:"stream"}),"/",(0,i.jsx)(n.code,{children:"download"})," calls you are redirected to the play_url for the object. (Ampache calls them play_url's because they redirect to the ",(0,i.jsx)(n.code,{children:"/play/"})," directory of the Ampache site)"]}),"\n",(0,i.jsx)(n.p,{children:"The checks are there to stop duplicate stats being recorded or spam from repeated calls to the same URL."}),"\n",(0,i.jsxs)(n.p,{children:["If you are only using the ",(0,i.jsx)(n.code,{children:"stream"})," action, Ampache will perform these checks for you."]}),"\n",(0,i.jsxs)(n.p,{children:["If you cache your files locally with ",(0,i.jsx)(n.code,{children:"download"})," or are using a different client you can use the helper functions to notify the server."]}),"\n",(0,i.jsx)(n.p,{children:"The Ampache config file also allows you configure what you consider to be a skip."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"skip_timer"})," setting is what the server uses to decide whether the new play is going to override the last play."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-TXT",children:"; Skip Timer Threshold\n; This allows custom times to decide when a track is skipped\n; Allows an integer to denote seconds, or a float to denote percentage\n; POSSIBLE VALUES:\n; 20 = 20 seconds.\n; 0.3 = 30%\n; DEFAULT: 20\n;skip_timer = 20\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example, when using the default settings:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You stream TRACK1"}),"\n",(0,i.jsx)(n.li,{children:"TRACK1 is recorded as a 'stream'"}),"\n",(0,i.jsx)(n.li,{children:"You start to stream TRACK2 10 seconds after TRACK1 started"}),"\n",(0,i.jsx)(n.li,{children:"The 'stream' for TRACK1 will change to a 'skip'"}),"\n",(0,i.jsx)(n.li,{children:"TRACK2 is now recorded as a 'stream'"}),"\n",(0,i.jsxs)(n.li,{children:["TRACK2 is recorded as your current ",(0,i.jsx)(n.code,{children:"now_playing"})," track."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"explaining-scrobble",children:"Explaining scrobble"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"scrobble"})," and ",(0,i.jsx)(n.code,{children:"record_play"})," methods are used for recording plays from saved information/data."]}),"\n",(0,i.jsxs)(n.p,{children:["They're generally not used during playback as the ",(0,i.jsx)(n.code,{children:"stream"})," action manages that process."]}),"\n",(0,i.jsx)(n.p,{children:"Scrobble uses parameters similar to how the Last.fm API works. (Which is why it's called scrobble.)"}),"\n",(0,i.jsx)(n.p,{children:"The idea is that if you are using a different player where you aren't able to get the object id you can scrobble to your Ampache server."}),"\n",(0,i.jsx)(n.p,{children:"Scrobble is useful for plugins in different music players as an alternative to Last.fm or Libre.fm clients."}),"\n",(0,i.jsxs)(n.p,{children:["Example streaming plugin for rhythmbox written a few years ago. ",(0,i.jsx)(n.a,{href:"https://github.com/lachlan-00/rhythmbox-ampache-fm",children:"rhythmbox-ampache-fm"})]}),"\n",(0,i.jsx)(n.h2,{id:"explaining-record_play",children:"Explaining record_play"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"record_play"})," does the same thing as ",(0,i.jsx)(n.code,{children:"scrobble"})," but only requires the object id of the song instead of searching by string data."]}),"\n",(0,i.jsx)(n.p,{children:"This is useful with playing cached/downloaded songs from an API client that has access to the id."}),"\n",(0,i.jsxs)(n.p,{children:["If you are playing a downloaded file or a cached version of the file there is no ",(0,i.jsx)(n.code,{children:"stream"})," or ",(0,i.jsx)(n.code,{children:"download"})," action happening."]}),"\n",(0,i.jsx)(n.p,{children:"To tell the server what you're doing and to record a stream you would call record_play when you start a track."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["I cache song with the id 1240 using a ",(0,i.jsx)(n.code,{children:"download"})," action"]}),"\n",(0,i.jsx)(n.li,{children:"I play the mp3 that was saved in my file cache"}),"\n",(0,i.jsxs)(n.li,{children:["That mp3 play is ",(0,i.jsx)(n.strong,{children:"NOT"})," a ",(0,i.jsx)(n.code,{children:"stream"})," so I use record_play to set the stream in the database"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"explaining-player",children:"Explaining player"}),"\n",(0,i.jsxs)(n.p,{children:["There is a new method for Ampache 6.4.0+ called player. (",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-json-methods#player",children:"json"})," and ",(0,i.jsx)(n.a,{href:"https://ampache.org/api/api-xml-methods#player",children:"xml"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Player is all about giving the server an active status of what the client is doing."}),"\n",(0,i.jsx)(n.p,{children:"Player does a bit more than scrobble and record_play allowing me to do a few more things"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Support for more media types. (",(0,i.jsx)(n.code,{children:"podcast_episode"})," and ",(0,i.jsx)(n.code,{children:"video"})," objects instead of just songs)"]}),"\n",(0,i.jsxs)(n.li,{children:["Update ",(0,i.jsx)(n.code,{children:"now_playing"})," data (remove on stop add it back on play)"]}),"\n",(0,i.jsx)(n.li,{children:"Shift last item play time on resumption of playback. (e.g. i pause a song at 20 seconds for a day and restart the song. the item will shift to NOW - 20 seconds as i haven't played any other song.)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It's similar to ",(0,i.jsx)(n.code,{children:"scrobble"}),"/",(0,i.jsx)(n.code,{children:"record_play"})," but the play/stop parameter gives me a bit more information about what you're doing"]}),"\n",(0,i.jsx)(n.h2,{id:"final-thoughts",children:"Final thoughts"}),"\n",(0,i.jsx)(n.p,{children:"Hopefully that helps you understand what happens when you are streaming or downloiading form Ampache servers."}),"\n",(0,i.jsxs)(n.p,{children:["The idea is that you shouldn't have to think about anything when you ",(0,i.jsx)(n.code,{children:"stream"}),". The server will do all the checks and updates for you."]}),"\n",(0,i.jsxs)(n.p,{children:["When you ",(0,i.jsx)(n.code,{children:"download"}),", you need to tell the server that you're playing a cached file."]}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"scrobble"}),"/",(0,i.jsx)(n.code,{children:"record_play"}),"/",(0,i.jsx)(n.code,{children:"player"})," to tell the server what you're doing."]}),"\n",(0,i.jsxs)(n.p,{children:["Once you tell the server that you're playing with ",(0,i.jsx)(n.code,{children:"stream"}),"/",(0,i.jsx)(n.code,{children:"scrobble"}),"/",(0,i.jsx)(n.code,{children:"record_play"}),"/",(0,i.jsx)(n.code,{children:"player"})," methods the server will update the play status/history depending on your your data and current playback status."]})]})}function h(e={}){const{wrapper:n}={...(0,r.RP)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{RP:()=>r,xA:()=>t});var s=a(6540);const i=s.createContext({});function r(e){const n=s.useContext(i);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function t({components:e,children:n,disableParentContext:a}){let t;return t=a?"function"==typeof e?e({}):e||o:r(e),s.createElement(i.Provider,{value:t},n)}}}]);